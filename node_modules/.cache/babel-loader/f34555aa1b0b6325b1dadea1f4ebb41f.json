{"ast":null,"code":"var _jsxFileName = \"D:\\\\VSCode\\\\learn react\\\\coffeeshop_frontend\\\\src\\\\components\\\\ListCheck.jsx\";\nimport React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { useEffect, useState } from \"react\";\nconst ListCheck = () => {\n  const [orders, setOrders] = useState([]);\n  const parseDate = dateString => {\n    const [date, time] = dateString.split(\" \");\n    const [day, month, year] = date.split(\"-\");\n    const [hours, minutes, seconds] = time.split(\":\");\n\n    // Tạo đối tượng Date\n    const dateObj = new Date(year, month - 1, day, hours, minutes, seconds);\n\n    // Chuyển đổi sang UTC+7\n    const utc7Offset = 7 * 60 * 60 * 1000; // Chuyển đổi từ giờ sang milliseconds\n    const utc7Date = new Date(dateObj.getTime() + utc7Offset);\n\n    // Trả về định dạng ngày/tháng/năm giờ:phút:giây\n    return utc7Date.toLocaleString(\"vi-VN\", {\n      timeZone: \"Asia/Bangkok\",\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      second: \"2-digit\"\n    });\n  };\n  const fetchOrders = async () => {\n    try {\n      // Lấy token từ localStorage\n      const token = localStorage.getItem(\"authToken\");\n      if (!token) {\n        console.error(\"No token found. Please log in.\");\n        return;\n      }\n\n      // Gửi request với Authorization Header\n      const response = await fetch(`http://${process.env.REACT_APP_API_URL}/mycoffee/order/with-details`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          // Thêm token vào Header\n          \"Content-Type\": \"application/json\" // Đảm bảo định dạng JSON\n        }\n      });\n      const data = await response.json();\n      const ordersData = data.result || []; // Lấy mảng đơn hàng từ API\n      // Ánh xạ đơn hàng\n      const mappedOrders = ordersData.map(order => ({\n        orderId: order.orderId,\n        table: order.table,\n        totalPrice: order.totalPrice,\n        created_at: order.created_at,\n        status: order.status,\n        orderDetails: order.orderDetails.map(detail => ({\n          quantity: detail.quantity,\n          productName: detail.productName,\n          image: detail.image,\n          price: detail.price\n        }))\n      }));\n\n      // Sắp xếp đơn hàng theo thời gian (ngày, giờ, phút, giây)\n      mappedOrders.sort((a, b) => {\n        const dateA = new Date(parseDate(a.created_at)).getTime();\n        const dateB = new Date(parseDate(b.created_at)).getTime();\n        return dateB - dateA; // Ngày và giờ gần nhất lên trên\n      });\n      setOrders(mappedOrders);\n    } catch (error) {\n      console.error(\"Failed to fetch orders:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchOrders();\n\n    // Thiết lập WebSocket để lắng nghe thông báo\n    const ws = new WebSocket(`ws://${process.env.REACT_APP_API_URL}/mycoffee/ws/orders`);\n    ws.onopen = () => {\n      console.log(\"Connected to WebSocket\");\n    };\n    ws.onmessage = async event => {\n      console.log(\"Received message:\", event.data);\n\n      // Cập nhật danh sách đơn hàng khi có thông báo mới\n      try {\n        fetchOrders();\n      } catch (error) {\n        console.error(\"Error updating orders:\", error);\n      }\n    };\n    ws.onclose = () => {\n      console.log(\"WebSocket connection closed\");\n    };\n    ws.onerror = error => {\n      console.error(\"WebSocket error:\", error);\n    };\n\n    // Cleanup WebSocket khi component unmount\n    return () => {\n      ws.close();\n    };\n  }, []);\n  const handleRemove = async orderId => {\n    try {\n      // Gửi request DELETE để xóa đơn hàng\n      const token = localStorage.getItem(\"authToken\");\n      if (!token) {\n        console.error(\"No token found. Please log in.\");\n        return;\n      }\n      const response = await fetch(`http://${process.env.REACT_APP_API_URL}/mycoffee/order/${orderId}`, {\n        method: \"DELETE\",\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to delete order\");\n      }\n\n      // Nếu xóa thành công, cập nhật lại danh sách đơn hàng\n      setOrders(prevOrders => {\n        const updatedOrders = prevOrders.filter(order => order.orderId !== orderId);\n\n        // Xóa lớp `border-top-solid` khỏi order đầu tiên nếu cần\n        if (updatedOrders.length > 0) {\n          updatedOrders[0] = {\n            ...updatedOrders[0],\n            isFirstOrder: true // Đánh dấu order đầu tiên\n          };\n        }\n        return updatedOrders;\n      });\n    } catch (error) {\n      console.error(\"Failed to remove order:\", error);\n    }\n  };\n  const handleStatusToggle = async orderId => {\n    try {\n      // Lấy thông tin trạng thái hiện tại của đơn hàng\n      const currentOrder = orders.find(order => order.orderId === orderId);\n      if (!currentOrder) {\n        console.error(\"Order not found\");\n        return;\n      }\n\n      // Xác định trạng thái mới\n      const newStatus = currentOrder.status === \"NONE\" ? \"pending\" : currentOrder.status === \"pending\" ? \"finished\" : \"NONE\";\n\n      // Lấy token từ localStorage\n      const token = localStorage.getItem(\"authToken\");\n      if (!token) {\n        console.error(\"No token found. Please log in.\");\n        return;\n      }\n\n      // Gửi request PUT để cập nhật trạng thái\n      const response = await fetch(`http://${process.env.REACT_APP_API_URL}/mycoffee/order/${orderId}`, {\n        method: \"PUT\",\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          status: newStatus\n        }) // Truyền trạng thái mới\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to update order status\");\n      }\n\n      // Nếu cập nhật thành công, cập nhật lại danh sách đơn hàng\n      setOrders(prevOrders => prevOrders.map(order => order.orderId === orderId ? {\n        ...order,\n        status: newStatus\n      } : order));\n    } catch (error) {\n      console.error(\"Failed to update status:\", error);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container py-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shopping-cart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row fw-bold border-bottom pb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-1 text-center border-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 17\n    }\n  }, \"Table\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-3-5 text-center border-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 17\n    }\n  }, \"Product\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-1 text-center border-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 17\n    }\n  }, \"Quantity\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-1-5 text-center border-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 17\n    }\n  }, \"Price\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-1-5 text-center border-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 17\n    }\n  }, \"Total\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-2 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 17\n    }\n  }, \"Time\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-1-5 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 17\n    }\n  }, \"Status\")), orders.map((order, orderIndex) => {\n    let isFirstDetail = true; // Đánh dấu lần đầu tiên hiển thị\n    let productIndex = 1; // Đánh số thứ tự cho các sản phẩm trong mỗi orderId\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: `order-group ${orderIndex > 0 ? \"border-top-solid\" : \"\"}`,\n      key: order.orderId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 19\n      }\n    }, order.orderDetails.map((detail, index) => {\n      const row = /*#__PURE__*/React.createElement(\"div\", {\n        className: `row py-2 align-items-center ${index === order.orderDetails.length - 1 ? \"\" : \"border-bottom-dashed\"}`,\n        key: `${order.orderId}-${index}`,\n        style: {\n          height: \"52.5208px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-1 text-center border-end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 27\n        }\n      }, isFirstDetail ? order.table : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-3-5 product-column border-end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 27\n        }\n      }, `${productIndex}. ${detail.productName}`), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-1 text-center border-end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 27\n        }\n      }, detail.quantity), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-1-5 text-center border-end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 27\n        }\n      }, \"$\", detail.price.toFixed(2)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-1-5 text-center border-end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 27\n        }\n      }, isFirstDetail ? `$${order.totalPrice.toFixed(2)}` : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-2 text-center border-end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 27\n        }\n      }, isFirstDetail ? parseDate(order.created_at) : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-1-5 text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 27\n        }\n      }, isFirstDetail && /*#__PURE__*/React.createElement(React.Fragment, null, order.status === \"NONE\" && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"status-btn-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-success btn-sm\",\n        onClick: () => handleStatusToggle(order.orderId),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 37\n        }\n      }, \"\\u2714\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-danger btn-sm\",\n        onClick: () => handleRemove(order.orderId),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 37\n        }\n      }, \"\\u2716\")), order.status === \"pending\" && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"status-btn-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"badge bg-warning text-dark\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 37\n        }\n      }, \"Pending\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-success btn-sm\",\n        onClick: () => handleStatusToggle(order.orderId),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 37\n        }\n      }, \"\\u2714\")), order.status === \"finished\" && /*#__PURE__*/React.createElement(\"span\", {\n        className: \"badge bg-success text-dark\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 35\n        }\n      }, \"Finished\"))));\n      productIndex++;\n      isFirstDetail = false; // Sau lần đầu tiên, không hiển thị nữa\n      return row;\n    }));\n  }))))), /*#__PURE__*/React.createElement(\"style\", {\n    jsx: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }\n  }, `\n      .shopping-cart {\n        width: 100%;\n        border-collapse: collapse;\n      }\n\n      /* Căn giữa cả chiều ngang và dọc cho tất cả các cột */\n      .row > div {\n        display: flex;\n        align-items: center; /* Căn giữa theo chiều dọc */\n        justify-content: center; /* Căn giữa theo chiều ngang */\n        border-right: 1px solid #dee2e6;\n        height: 100%;\n      }\n\n      /* Xóa border-right cho cột cuối */\n      .row > div:last-child {\n        border-right: none;\n      }\n\n      /* Loại bỏ border giữa các detail trong cùng một order-group */\n      .order-group > .row:last-child {\n        border-bottom: none;\n      }\n\n      /* Border nét liền giữa các order-group */\n      .border-top-solid {\n        border-top: 2px solid #FFFFFF;\n      }\n\n      /* Căn trái nội dung trong cột Product */\n      .product-column {\n        display: flex;\n        justify-content: flex-start !important; /* Căn trái nội dung */\n        align-items: center; /* Căn giữa theo chiều dọc */\n        text-align: left; /* Đảm bảo căn trái văn bản */\n        padding-left: 10px; /* Thêm khoảng cách nội bộ */\n      }\n\n\n      .status-btn-group {\n        display: flex;\n        justify-content: center;\n        gap: 4px;\n      }\n\n      /* Đồng đều khoảng cách giữa các row */\n      .row {\n        padding-top: 10px;\n        padding-bottom: 10px;\n        align-items: stretch;\n      }\n\n      .col-1-5 {\n      flex: 0 0 12.5%; /* 1.5/12 * 100% = 12.5% */\n      max-width: 12.5%;\n      }\n\n      .col-3-5 {\n      flex: 0 0 29.167%; /* 3.5/12 * 100% */\n      max-width: 29.167%;\n      }\n    `));\n};\nexport default ListCheck;","map":{"version":3,"names":["React","useEffect","useState","ListCheck","orders","setOrders","parseDate","dateString","date","time","split","day","month","year","hours","minutes","seconds","dateObj","Date","utc7Offset","utc7Date","getTime","toLocaleString","timeZone","hour","minute","second","fetchOrders","token","localStorage","getItem","console","error","response","fetch","process","env","REACT_APP_API_URL","headers","Authorization","data","json","ordersData","result","mappedOrders","map","order","orderId","table","totalPrice","created_at","status","orderDetails","detail","quantity","productName","image","price","sort","a","b","dateA","dateB","ws","WebSocket","onopen","log","onmessage","event","onclose","onerror","close","handleRemove","method","ok","Error","prevOrders","updatedOrders","filter","length","isFirstOrder","handleStatusToggle","currentOrder","find","newStatus","body","JSON","stringify","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","orderIndex","isFirstDetail","productIndex","key","index","row","style","height","toFixed","Fragment","onClick","jsx"],"sources":["D:/VSCode/learn react/coffeeshop_frontend/src/components/ListCheck.jsx"],"sourcesContent":["import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst ListCheck = () => {\r\n  const [orders, setOrders] = useState([]);\r\n\r\n  const parseDate = (dateString) => {\r\n    const [date, time] = dateString.split(\" \");\r\n    const [day, month, year] = date.split(\"-\");\r\n    const [hours, minutes, seconds] = time.split(\":\");\r\n  \r\n    // Tạo đối tượng Date\r\n    const dateObj = new Date(year, month - 1, day, hours, minutes, seconds);\r\n  \r\n    // Chuyển đổi sang UTC+7\r\n    const utc7Offset = 7 * 60 * 60 * 1000; // Chuyển đổi từ giờ sang milliseconds\r\n    const utc7Date = new Date(dateObj.getTime() + utc7Offset);\r\n  \r\n    // Trả về định dạng ngày/tháng/năm giờ:phút:giây\r\n    return utc7Date.toLocaleString(\"vi-VN\", {\r\n      timeZone: \"Asia/Bangkok\",\r\n      year: \"numeric\",\r\n      month: \"2-digit\",\r\n      day: \"2-digit\",\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n      second: \"2-digit\",\r\n    });\r\n  };\r\n  \r\n  \r\n  \r\n  \r\n  const fetchOrders = async () => {\r\n    try {\r\n      // Lấy token từ localStorage\r\n      const token = localStorage.getItem(\"authToken\");\r\n  \r\n      if (!token) {\r\n        console.error(\"No token found. Please log in.\");\r\n        return;\r\n      }\r\n  \r\n      // Gửi request với Authorization Header\r\n      const response = await fetch(\r\n        `http://${process.env.REACT_APP_API_URL}/mycoffee/order/with-details`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`, // Thêm token vào Header\r\n            \"Content-Type\": \"application/json\", // Đảm bảo định dạng JSON\r\n          },\r\n        }\r\n      );\r\n  \r\n      const data = await response.json();\r\n  \r\n      const ordersData = data.result || []; // Lấy mảng đơn hàng từ API\r\n      // Ánh xạ đơn hàng\r\n      const mappedOrders = ordersData.map((order) => ({\r\n        orderId: order.orderId,\r\n        table: order.table,\r\n        totalPrice: order.totalPrice,\r\n        created_at: order.created_at,\r\n        status: order.status, \r\n        orderDetails: order.orderDetails.map((detail) => ({\r\n          quantity: detail.quantity,\r\n          productName: detail.productName,\r\n          image: detail.image,\r\n          price: detail.price,\r\n        })),\r\n      }));\r\n\r\n      // Sắp xếp đơn hàng theo thời gian (ngày, giờ, phút, giây)\r\n      mappedOrders.sort((a, b) => {\r\n        const dateA = new Date(parseDate(a.created_at)).getTime();\r\n        const dateB = new Date(parseDate(b.created_at)).getTime();\r\n        return dateB - dateA; // Ngày và giờ gần nhất lên trên\r\n      });\r\n\r\n      setOrders(mappedOrders);\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch orders:\", error);\r\n    }\r\n  };\r\n  \r\n  useEffect(() => {\r\n    fetchOrders();\r\n\r\n    // Thiết lập WebSocket để lắng nghe thông báo\r\n    const ws = new WebSocket(`ws://${process.env.REACT_APP_API_URL}/mycoffee/ws/orders`);\r\n\r\n    ws.onopen = () => {\r\n      console.log(\"Connected to WebSocket\");\r\n    };\r\n\r\n    ws.onmessage = async (event) => {\r\n      console.log(\"Received message:\", event.data);\r\n\r\n      // Cập nhật danh sách đơn hàng khi có thông báo mới\r\n      try {\r\n        fetchOrders();\r\n      } catch (error) {\r\n        console.error(\"Error updating orders:\", error);\r\n      }\r\n    };\r\n\r\n    ws.onclose = () => {\r\n      console.log(\"WebSocket connection closed\");\r\n    };\r\n\r\n    ws.onerror = (error) => {\r\n      console.error(\"WebSocket error:\", error);\r\n    };\r\n\r\n    // Cleanup WebSocket khi component unmount\r\n    return () => {\r\n      ws.close();\r\n    };\r\n  }, []);\r\n  \r\n\r\n  const handleRemove = async (orderId) => {\r\n    try {\r\n      // Gửi request DELETE để xóa đơn hàng\r\n      const token = localStorage.getItem(\"authToken\");\r\n  \r\n      if (!token) {\r\n        console.error(\"No token found. Please log in.\");\r\n        return;\r\n      }\r\n  \r\n      const response = await fetch(\r\n        `http://${process.env.REACT_APP_API_URL}/mycoffee/order/${orderId}`,\r\n        {\r\n          method: \"DELETE\",\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n  \r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to delete order\");\r\n      }\r\n  \r\n      // Nếu xóa thành công, cập nhật lại danh sách đơn hàng\r\n      setOrders((prevOrders) => {\r\n        const updatedOrders = prevOrders.filter(\r\n          (order) => order.orderId !== orderId\r\n        );\r\n  \r\n        // Xóa lớp `border-top-solid` khỏi order đầu tiên nếu cần\r\n        if (updatedOrders.length > 0) {\r\n          updatedOrders[0] = {\r\n            ...updatedOrders[0],\r\n            isFirstOrder: true, // Đánh dấu order đầu tiên\r\n          };\r\n        }\r\n  \r\n        return updatedOrders;\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Failed to remove order:\", error);\r\n    }\r\n  };\r\n  \r\n\r\n\r\n  const handleStatusToggle = async (orderId) => {\r\n    try {\r\n      // Lấy thông tin trạng thái hiện tại của đơn hàng\r\n      const currentOrder = orders.find((order) => order.orderId === orderId);\r\n      if (!currentOrder) {\r\n        console.error(\"Order not found\");\r\n        return;\r\n      }\r\n  \r\n      // Xác định trạng thái mới\r\n      const newStatus =\r\n        currentOrder.status === \"NONE\"\r\n          ? \"pending\"\r\n          : currentOrder.status === \"pending\"\r\n          ? \"finished\"\r\n          : \"NONE\";\r\n  \r\n      // Lấy token từ localStorage\r\n      const token = localStorage.getItem(\"authToken\");\r\n      if (!token) {\r\n        console.error(\"No token found. Please log in.\");\r\n        return;\r\n      }\r\n  \r\n      // Gửi request PUT để cập nhật trạng thái\r\n      const response = await fetch(\r\n        `http://${process.env.REACT_APP_API_URL}/mycoffee/order/${orderId}`,\r\n        {\r\n          method: \"PUT\",\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({ status: newStatus }), // Truyền trạng thái mới\r\n        }\r\n      );\r\n  \r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to update order status\");\r\n      }\r\n  \r\n      // Nếu cập nhật thành công, cập nhật lại danh sách đơn hàng\r\n      setOrders((prevOrders) =>\r\n        prevOrders.map((order) =>\r\n          order.orderId === orderId ? { ...order, status: newStatus } : order\r\n        )\r\n      );\r\n    } catch (error) {\r\n      console.error(\"Failed to update status:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container py-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <div className=\"shopping-cart\">\r\n              {/* Header */}\r\n              <div className=\"row fw-bold border-bottom pb-2\">\r\n                <div className=\"col-1 text-center border-end\">Table</div>\r\n                <div className=\"col-3-5 text-center border-end\">Product</div>\r\n                <div className=\"col-1 text-center border-end\">Quantity</div>\r\n                <div className=\"col-1-5 text-center border-end\">Price</div>\r\n                <div className=\"col-1-5 text-center border-end\">Total</div>\r\n                <div className=\"col-2 text-center\">Time</div>\r\n                <div className=\"col-1-5 text-center\">Status</div>\r\n              </div>\r\n              {/* Body */}\r\n              {orders.map((order, orderIndex) => {\r\n                let isFirstDetail = true; // Đánh dấu lần đầu tiên hiển thị\r\n                let productIndex = 1; // Đánh số thứ tự cho các sản phẩm trong mỗi orderId\r\n                return (\r\n                  <div\r\n                    className={`order-group ${\r\n                      orderIndex > 0 ? \"border-top-solid\" : \"\"\r\n                    }`}\r\n                    key={order.orderId}\r\n                  >\r\n                    {order.orderDetails.map((detail, index) => {\r\n                      const row = (\r\n                        <div\r\n                          className={`row py-2 align-items-center ${\r\n                            index === order.orderDetails.length - 1\r\n                              ? \"\"\r\n                              : \"border-bottom-dashed\"\r\n                          }`}\r\n                          key={`${order.orderId}-${index}`}\r\n                          style={{ height: \"52.5208px\" }}\r\n                        >\r\n                          <div className=\"col-1 text-center border-end\">\r\n                            {isFirstDetail ? order.table : \"\"}\r\n                          </div>\r\n                          <div className=\"col-3-5 product-column border-end\">\r\n                            {`${productIndex}. ${detail.productName}`}\r\n                          </div>\r\n                          <div className=\"col-1 text-center border-end\">\r\n                            {detail.quantity}\r\n                          </div>\r\n                          <div className=\"col-1-5 text-center border-end\">\r\n                            ${detail.price.toFixed(2)}\r\n                          </div>\r\n                          <div className=\"col-1-5 text-center border-end\">\r\n                            {isFirstDetail ? `$${order.totalPrice.toFixed(2)}` : \"\"}\r\n                          </div>\r\n                          <div className=\"col-2 text-center border-end\">\r\n                            {isFirstDetail ? parseDate(order.created_at) : \"\"}\r\n                          </div>\r\n                          <div className=\"col-1-5 text-center\">\r\n                            {isFirstDetail && (\r\n                              <>\r\n                                {order.status === \"NONE\" && (\r\n                                  <div className=\"status-btn-group\">\r\n                                    <button\r\n                                      className=\"btn btn-success btn-sm\"\r\n                                      onClick={() =>\r\n                                        handleStatusToggle(order.orderId)\r\n                                      }\r\n                                    >\r\n                                      ✔\r\n                                    </button>\r\n                                    <button\r\n                                      className=\"btn btn-danger btn-sm\"\r\n                                      onClick={() =>\r\n                                        handleRemove(order.orderId)\r\n                                      }\r\n                                    >\r\n                                      ✖\r\n                                    </button>\r\n                                  </div>\r\n                                )}\r\n                                {order.status === \"pending\" && (\r\n                                  <div className=\"status-btn-group\">\r\n                                    <span className=\"badge bg-warning text-dark\">\r\n                                      Pending\r\n                                    </span>\r\n                                    <button\r\n                                      className=\"btn btn-success btn-sm\"\r\n                                      onClick={() =>\r\n                                        handleStatusToggle(order.orderId)\r\n                                      }\r\n                                    >\r\n                                      ✔\r\n                                    </button>\r\n                                  </div>\r\n                                )}\r\n                                {order.status === \"finished\" && (\r\n                                  <span className=\"badge bg-success text-dark\">\r\n                                    Finished\r\n                                  </span>\r\n                                )}\r\n                              </>\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                      productIndex++;\r\n                      isFirstDetail = false; // Sau lần đầu tiên, không hiển thị nữa\r\n                      return row;\r\n                    })}\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <style jsx>{`\r\n      .shopping-cart {\r\n        width: 100%;\r\n        border-collapse: collapse;\r\n      }\r\n\r\n      /* Căn giữa cả chiều ngang và dọc cho tất cả các cột */\r\n      .row > div {\r\n        display: flex;\r\n        align-items: center; /* Căn giữa theo chiều dọc */\r\n        justify-content: center; /* Căn giữa theo chiều ngang */\r\n        border-right: 1px solid #dee2e6;\r\n        height: 100%;\r\n      }\r\n\r\n      /* Xóa border-right cho cột cuối */\r\n      .row > div:last-child {\r\n        border-right: none;\r\n      }\r\n\r\n      /* Loại bỏ border giữa các detail trong cùng một order-group */\r\n      .order-group > .row:last-child {\r\n        border-bottom: none;\r\n      }\r\n\r\n      /* Border nét liền giữa các order-group */\r\n      .border-top-solid {\r\n        border-top: 2px solid #FFFFFF;\r\n      }\r\n\r\n      /* Căn trái nội dung trong cột Product */\r\n      .product-column {\r\n        display: flex;\r\n        justify-content: flex-start !important; /* Căn trái nội dung */\r\n        align-items: center; /* Căn giữa theo chiều dọc */\r\n        text-align: left; /* Đảm bảo căn trái văn bản */\r\n        padding-left: 10px; /* Thêm khoảng cách nội bộ */\r\n      }\r\n\r\n\r\n      .status-btn-group {\r\n        display: flex;\r\n        justify-content: center;\r\n        gap: 4px;\r\n      }\r\n\r\n      /* Đồng đều khoảng cách giữa các row */\r\n      .row {\r\n        padding-top: 10px;\r\n        padding-bottom: 10px;\r\n        align-items: stretch;\r\n      }\r\n\r\n      .col-1-5 {\r\n      flex: 0 0 12.5%; /* 1.5/12 * 100% = 12.5% */\r\n      max-width: 12.5%;\r\n      }\r\n\r\n      .col-3-5 {\r\n      flex: 0 0 29.167%; /* 3.5/12 * 100% */\r\n      max-width: 29.167%;\r\n      }\r\n    `}</style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListCheck;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}