{"ast":null,"code":"var _jsxFileName = \"D:\\\\VSCode\\\\learn react\\\\learn\\\\src\\\\components\\\\ListMenu.jsx\";\nimport React from 'react';\nimport { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport Order from \"../ModelFE/Order\";\nconst ListMenu = () => {\n  const [products, setProducts] = useState([]);\n  const fetchProducts = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8080/mycoffee/product\");\n      const data = await response.json();\n\n      // Kiểm tra xem có trường result không\n      const productsData = data.result || []; // Lấy mảng sản phẩm từ trường 'result'\n\n      // Ánh xạ sản phẩm\n      const mappedProducts = productsData.map(item => ({\n        id: item.id,\n        name: item.name,\n        price: item.price,\n        category: item.category.name,\n        image_url: item.image_url,\n        createdAt: new Date(item.createdAt),\n        updatedAt: new Date(item.updatedAt),\n        deletedAt: item.deletedAt ? new Date(item.deletedAt) : null\n      }));\n      setProducts(mappedProducts);\n    } catch (error) {\n      console.error(\"Failed to fetch products:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchProducts();\n  }, []);\n  const location = useLocation();\n\n  // Lấy số bàn từ URL\n  const getTableFromUrl = () => {\n    const params = new URLSearchParams(location.search);\n    return parseInt(params.get(\"table\")) || 0; // Trả về số bàn hoặc 0 nếu không có\n  };\n  const table = getTableFromUrl();\n\n  // Hàm xử lý khi nhấn vào nút của sản phẩm\n  const handleAddToOrder = async productId => {\n    try {\n      // Kiểm tra nếu đã có orderId trong localStorage\n      let orderId = localStorage.getItem(\"orderId\");\n\n      // Nếu chưa có orderId, gọi API để tạo mới\n      if (!orderId) {\n        const response = await fetch(\"http://localhost:8080/mycoffee/order\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            table\n          }) // Gửi số bàn đến backend\n        });\n        if (!response.ok) {\n          throw new Error(\"Failed to create order\");\n        }\n        const data = await response.json();\n        orderId = data.result.orderId; // Lấy orderId từ phản hồi API\n\n        // Lưu orderId vào localStorage\n        localStorage.setItem(\"orderId\", orderId);\n      }\n\n      // Lưu thông tin sản phẩm và số bàn vào localStorage\n      const currentOrder = JSON.parse(localStorage.getItem(\"currentOrder\")) || [];\n      currentOrder.push({\n        productId,\n        table,\n        orderId\n      });\n      localStorage.setItem(\"currentOrder\", JSON.stringify(currentOrder));\n      alert(`Product ${productId} added to order ${orderId}!`);\n    } catch (error) {\n      console.error(\"Error adding product to order:\", error);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, \"Create Order\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, \"Table: \", table), order && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, \"Order Details\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, \"Order ID: \", order.orderId), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, \"User ID: \", order.userId), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, \"Table: \", order.table), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, \"Total Price: $\", order.totalPrice), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, \"Message: \", order.message), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, \"Code: \", order.code)))\n  // <div class=\"container py-5\">\n  //     <div class=\"row mx-auto\">\n  //         <div class=\"col\">\n  //             <div data-reflow-type=\"product-list\" data-reflow-layout=\"cards\" data-reflow-order=\"date_desc\" data-reflow-product-link=\"/product.html?product={id}\">\n\n  //                 <div class=\"reflow-product-list ref-cards\">\n\n  //                 <div class=\"ref-products\">\n  //                 {products.map((product) => (\n  //                     <a class=\"ref-product\">\n\n  //                             <div class=\"ref-media\"><img class=\"ref-image\" src={product.image_url} loading=\"lazy\" />\n  //                             </div>\n  //                             <div class=\"ref-product-data\">\n  //                                 <div class=\"ref-product-info\">\n  //                                     <h5 class=\"ref-name\">{product.name}</h5>\n  //                                     </div><strong class=\"ref-price\">${product.price}</strong>\n  //                             </div>\n  //                             <div class=\"ref-addons\"><a class=\"ref-button preview-toggle\" href=\"#\">Add to Cart</a></div>\n  //                         </a>))}\n  //                     </div>\n\n  //                     <div class=\"ref-product-preview\">\n  //                         <div class=\"ref-product-preview-header\">\n  //                             <div class=\"ref-title\"></div>\n  //                             <div class=\"ref-close-button\">×</div>\n  //                         </div>\n  //                         <div class=\"ref-product-preview-content\"></div>\n  //                     </div>\n  //                 </div>\n  //             </div>\n  //         </div>\n  //     </div>\n  // </div>\n  ;\n};\nexport default ListMenu;","map":{"version":3,"names":["React","useEffect","useState","useLocation","Order","ListMenu","products","setProducts","fetchProducts","response","fetch","data","json","productsData","result","mappedProducts","map","item","id","name","price","category","image_url","createdAt","Date","updatedAt","deletedAt","error","console","location","getTableFromUrl","params","URLSearchParams","search","parseInt","get","table","handleAddToOrder","productId","orderId","localStorage","getItem","method","headers","body","JSON","stringify","ok","Error","setItem","currentOrder","parse","push","alert","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","order","style","marginTop","userId","totalPrice","message","code"],"sources":["D:/VSCode/learn react/learn/src/components/ListMenu.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Order from \"../ModelFE/Order\";\r\nconst ListMenu = () => {\r\n  const [products, setProducts] = useState([]);\r\n\r\n  const fetchProducts = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:8080/mycoffee/product\");\r\n        const data = await response.json();\r\n      \r\n        // Kiểm tra xem có trường result không\r\n        const productsData = data.result || []; // Lấy mảng sản phẩm từ trường 'result'\r\n    \r\n        // Ánh xạ sản phẩm\r\n        const mappedProducts = productsData.map((item) => ({\r\n          id: item.id,\r\n          name: item.name,\r\n          price: item.price,\r\n          category: item.category.name,\r\n          image_url: item.image_url,\r\n          createdAt: new Date(item.createdAt),\r\n          updatedAt: new Date(item.updatedAt),\r\n          deletedAt: item.deletedAt ? new Date(item.deletedAt) : null,\r\n        }));\r\n    \r\n        setProducts(mappedProducts);\r\n      } catch (error) {\r\n        console.error(\"Failed to fetch products:\", error);\r\n      }\r\n    };\r\n\r\n  useEffect(() => {\r\n    fetchProducts();\r\n  }, []);\r\n\r\n\r\n  const location = useLocation();\r\n\r\n  // Lấy số bàn từ URL\r\n  const getTableFromUrl = () => {\r\n    const params = new URLSearchParams(location.search);\r\n    return parseInt(params.get(\"table\")) || 0; // Trả về số bàn hoặc 0 nếu không có\r\n  };\r\n\r\n  const table = getTableFromUrl();\r\n\r\n  // Hàm xử lý khi nhấn vào nút của sản phẩm\r\n  const handleAddToOrder = async (productId) => {\r\n    try {\r\n      // Kiểm tra nếu đã có orderId trong localStorage\r\n      let orderId = localStorage.getItem(\"orderId\");\r\n\r\n      // Nếu chưa có orderId, gọi API để tạo mới\r\n      if (!orderId) {\r\n        const response = await fetch(\"http://localhost:8080/mycoffee/order\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({ table }), // Gửi số bàn đến backend\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to create order\");\r\n        }\r\n\r\n        const data = await response.json();\r\n        orderId = data.result.orderId; // Lấy orderId từ phản hồi API\r\n\r\n        // Lưu orderId vào localStorage\r\n        localStorage.setItem(\"orderId\", orderId);\r\n      }\r\n\r\n      // Lưu thông tin sản phẩm và số bàn vào localStorage\r\n      const currentOrder = JSON.parse(localStorage.getItem(\"currentOrder\")) || [];\r\n      currentOrder.push({ productId, table, orderId });\r\n      localStorage.setItem(\"currentOrder\", JSON.stringify(currentOrder));\r\n\r\n      alert(`Product ${productId} added to order ${orderId}!`);\r\n    } catch (error) {\r\n      console.error(\"Error adding product to order:\", error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h1>Create Order</h1>\r\n      <p>Table: {table}</p>\r\n      {order && (\r\n        <div style={{ marginTop: \"20px\" }}>\r\n          <h2>Order Details</h2>\r\n          <p>Order ID: {order.orderId}</p>\r\n          <p>User ID: {order.userId}</p>\r\n          <p>Table: {order.table}</p>\r\n          <p>Total Price: ${order.totalPrice}</p>\r\n          <p>Message: {order.message}</p>\r\n          <p>Code: {order.code}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n        // <div class=\"container py-5\">\r\n        //     <div class=\"row mx-auto\">\r\n        //         <div class=\"col\">\r\n        //             <div data-reflow-type=\"product-list\" data-reflow-layout=\"cards\" data-reflow-order=\"date_desc\" data-reflow-product-link=\"/product.html?product={id}\">\r\n\r\n        //                 <div class=\"reflow-product-list ref-cards\">\r\n                        \r\n\r\n        //                 <div class=\"ref-products\">\r\n        //                 {products.map((product) => (\r\n        //                     <a class=\"ref-product\">\r\n                            \r\n        //                             <div class=\"ref-media\"><img class=\"ref-image\" src={product.image_url} loading=\"lazy\" />\r\n        //                             </div>\r\n        //                             <div class=\"ref-product-data\">\r\n        //                                 <div class=\"ref-product-info\">\r\n        //                                     <h5 class=\"ref-name\">{product.name}</h5>\r\n        //                                     </div><strong class=\"ref-price\">${product.price}</strong>\r\n        //                             </div>\r\n        //                             <div class=\"ref-addons\"><a class=\"ref-button preview-toggle\" href=\"#\">Add to Cart</a></div>\r\n        //                         </a>))}\r\n        //                     </div>\r\n\r\n\r\n                                \r\n        //                     <div class=\"ref-product-preview\">\r\n        //                         <div class=\"ref-product-preview-header\">\r\n        //                             <div class=\"ref-title\"></div>\r\n        //                             <div class=\"ref-close-button\">×</div>\r\n        //                         </div>\r\n        //                         <div class=\"ref-product-preview-content\"></div>\r\n        //                     </div>\r\n        //                 </div>\r\n        //             </div>\r\n        //         </div>\r\n        //     </div>\r\n        // </div>\r\n  );\r\n};\r\n\r\nexport default ListMenu;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,kBAAkB;AACpC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMM,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,CAAC;MACtE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;;MAElC;MACA,MAAMC,YAAY,GAAGF,IAAI,CAACG,MAAM,IAAI,EAAE,CAAC,CAAC;;MAExC;MACA,MAAMC,cAAc,GAAGF,YAAY,CAACG,GAAG,CAAEC,IAAI,KAAM;QACjDC,EAAE,EAAED,IAAI,CAACC,EAAE;QACXC,IAAI,EAAEF,IAAI,CAACE,IAAI;QACfC,KAAK,EAAEH,IAAI,CAACG,KAAK;QACjBC,QAAQ,EAAEJ,IAAI,CAACI,QAAQ,CAACF,IAAI;QAC5BG,SAAS,EAAEL,IAAI,CAACK,SAAS;QACzBC,SAAS,EAAE,IAAIC,IAAI,CAACP,IAAI,CAACM,SAAS,CAAC;QACnCE,SAAS,EAAE,IAAID,IAAI,CAACP,IAAI,CAACQ,SAAS,CAAC;QACnCC,SAAS,EAAET,IAAI,CAACS,SAAS,GAAG,IAAIF,IAAI,CAACP,IAAI,CAACS,SAAS,CAAC,GAAG;MACzD,CAAC,CAAC,CAAC;MAEHnB,WAAW,CAACQ,cAAc,CAAC;IAC7B,CAAC,CAAC,OAAOY,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAEH1B,SAAS,CAAC,MAAM;IACdO,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAGN,MAAMqB,QAAQ,GAAG1B,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAM2B,eAAe,GAAGA,CAAA,KAAM;IAC5B,MAAMC,MAAM,GAAG,IAAIC,eAAe,CAACH,QAAQ,CAACI,MAAM,CAAC;IACnD,OAAOC,QAAQ,CAACH,MAAM,CAACI,GAAG,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;EAC7C,CAAC;EAED,MAAMC,KAAK,GAAGN,eAAe,CAAC,CAAC;;EAE/B;EACA,MAAMO,gBAAgB,GAAG,MAAOC,SAAS,IAAK;IAC5C,IAAI;MACF;MACA,IAAIC,OAAO,GAAGC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;;MAE7C;MACA,IAAI,CAACF,OAAO,EAAE;QACZ,MAAM9B,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;UACnEgC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAEV;UAAM,CAAC,CAAC,CAAE;QACnC,CAAC,CAAC;QAEF,IAAI,CAAC3B,QAAQ,CAACsC,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;QAC3C;QAEA,MAAMrC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClC2B,OAAO,GAAG5B,IAAI,CAACG,MAAM,CAACyB,OAAO,CAAC,CAAC;;QAE/B;QACAC,YAAY,CAACS,OAAO,CAAC,SAAS,EAAEV,OAAO,CAAC;MAC1C;;MAEA;MACA,MAAMW,YAAY,GAAGL,IAAI,CAACM,KAAK,CAACX,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,CAAC,IAAI,EAAE;MAC3ES,YAAY,CAACE,IAAI,CAAC;QAAEd,SAAS;QAAEF,KAAK;QAAEG;MAAQ,CAAC,CAAC;MAChDC,YAAY,CAACS,OAAO,CAAC,cAAc,EAAEJ,IAAI,CAACC,SAAS,CAACI,YAAY,CAAC,CAAC;MAElEG,KAAK,CAAC,WAAWf,SAAS,mBAAmBC,OAAO,GAAG,CAAC;IAC1D,CAAC,CAAC,OAAOZ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACxD;EACF,CAAC;EAID,oBACE3B,KAAA,CAAAsD,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACE5D,KAAA,CAAAsD,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,cAAgB,CAAC,eACrB5D,KAAA,CAAAsD,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,SAAO,EAACxB,KAAS,CAAC,EACpByB,KAAK,iBACJ7D,KAAA,CAAAsD,aAAA;IAAKQ,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAO,CAAE;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAChC5D,KAAA,CAAAsD,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,eAAiB,CAAC,eACtB5D,KAAA,CAAAsD,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,YAAU,EAACC,KAAK,CAACtB,OAAW,CAAC,eAChCvC,KAAA,CAAAsD,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,WAAS,EAACC,KAAK,CAACG,MAAU,CAAC,eAC9BhE,KAAA,CAAAsD,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,SAAO,EAACC,KAAK,CAACzB,KAAS,CAAC,eAC3BpC,KAAA,CAAAsD,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,gBAAc,EAACC,KAAK,CAACI,UAAc,CAAC,eACvCjE,KAAA,CAAAsD,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,WAAS,EAACC,KAAK,CAACK,OAAW,CAAC,eAC/BlE,KAAA,CAAAsD,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,QAAM,EAACC,KAAK,CAACM,IAAQ,CACrB,CAEJ;EACD;EACA;EACA;EACA;;EAEA;;EAGA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAIA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAER,CAAC;AAED,eAAe9D,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module"}