{"ast":null,"code":"/*!\r\n  * Bootstrap v5.3.3 (https://getbootstrap.com/)\r\n  * Copyright 2011-2024 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\r\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\r\n  */\n!function (t, e) {\n  \"object\" == typeof exports && \"undefined\" != typeof module ? module.exports = e(require(\"@popperjs/core\")) : \"function\" == typeof define && define.amd ? define([\"@popperjs/core\"], e) : (t = \"undefined\" != typeof globalThis ? globalThis : t || self).bootstrap = e(t.Popper);\n}(this, function (t) {\n  \"use strict\";\n\n  function e(t) {\n    const e = Object.create(null, {\n      [Symbol.toStringTag]: {\n        value: \"Module\"\n      }\n    });\n    if (t) for (const i in t) if (\"default\" !== i) {\n      const s = Object.getOwnPropertyDescriptor(t, i);\n      Object.defineProperty(e, i, s.get ? s : {\n        enumerable: !0,\n        get: () => t[i]\n      });\n    }\n    return e.default = t, Object.freeze(e);\n  }\n  const i = e(t),\n    s = new Map(),\n    n = {\n      set(t, e, i) {\n        s.has(t) || s.set(t, new Map());\n        const n = s.get(t);\n        n.has(e) || 0 === n.size ? n.set(e, i) : console.error(`Bootstrap doesn't allow more than one instance per element. Bound instance: ${Array.from(n.keys())[0]}.`);\n      },\n      get: (t, e) => s.has(t) && s.get(t).get(e) || null,\n      remove(t, e) {\n        if (!s.has(t)) return;\n        const i = s.get(t);\n        i.delete(e), 0 === i.size && s.delete(t);\n      }\n    },\n    o = \"transitionend\",\n    r = t => (t && window.CSS && window.CSS.escape && (t = t.replace(/#([^\\s\"#']+)/g, (t, e) => `#${CSS.escape(e)}`)), t),\n    a = t => {\n      t.dispatchEvent(new Event(o));\n    },\n    l = t => !(!t || \"object\" != typeof t) && (void 0 !== t.jquery && (t = t[0]), void 0 !== t.nodeType),\n    c = t => l(t) ? t.jquery ? t[0] : t : \"string\" == typeof t && t.length > 0 ? document.querySelector(r(t)) : null,\n    h = t => {\n      if (!l(t) || 0 === t.getClientRects().length) return !1;\n      const e = \"visible\" === getComputedStyle(t).getPropertyValue(\"visibility\"),\n        i = t.closest(\"details:not([open])\");\n      if (!i) return e;\n      if (i !== t) {\n        const e = t.closest(\"summary\");\n        if (e && e.parentNode !== i) return !1;\n        if (null === e) return !1;\n      }\n      return e;\n    },\n    d = t => !t || t.nodeType !== Node.ELEMENT_NODE || !!t.classList.contains(\"disabled\") || (void 0 !== t.disabled ? t.disabled : t.hasAttribute(\"disabled\") && \"false\" !== t.getAttribute(\"disabled\")),\n    u = t => {\n      if (!document.documentElement.attachShadow) return null;\n      if (\"function\" == typeof t.getRootNode) {\n        const e = t.getRootNode();\n        return e instanceof ShadowRoot ? e : null;\n      }\n      return t instanceof ShadowRoot ? t : t.parentNode ? u(t.parentNode) : null;\n    },\n    _ = () => {},\n    g = t => {\n      t.offsetHeight;\n    },\n    f = () => window.jQuery && !document.body.hasAttribute(\"data-bs-no-jquery\") ? window.jQuery : null,\n    m = [],\n    p = () => \"rtl\" === document.documentElement.dir,\n    b = t => {\n      var e;\n      e = () => {\n        const e = f();\n        if (e) {\n          const i = t.NAME,\n            s = e.fn[i];\n          e.fn[i] = t.jQueryInterface, e.fn[i].Constructor = t, e.fn[i].noConflict = () => (e.fn[i] = s, t.jQueryInterface);\n        }\n      }, \"loading\" === document.readyState ? (m.length || document.addEventListener(\"DOMContentLoaded\", () => {\n        for (const t of m) t();\n      }), m.push(e)) : e();\n    },\n    v = (t, e = [], i = t) => \"function\" == typeof t ? t(...e) : i,\n    y = (t, e, i = !0) => {\n      if (!i) return void v(t);\n      const s = (t => {\n        if (!t) return 0;\n        let {\n          transitionDuration: e,\n          transitionDelay: i\n        } = window.getComputedStyle(t);\n        const s = Number.parseFloat(e),\n          n = Number.parseFloat(i);\n        return s || n ? (e = e.split(\",\")[0], i = i.split(\",\")[0], 1e3 * (Number.parseFloat(e) + Number.parseFloat(i))) : 0;\n      })(e) + 5;\n      let n = !1;\n      const r = ({\n        target: i\n      }) => {\n        i === e && (n = !0, e.removeEventListener(o, r), v(t));\n      };\n      e.addEventListener(o, r), setTimeout(() => {\n        n || a(e);\n      }, s);\n    },\n    w = (t, e, i, s) => {\n      const n = t.length;\n      let o = t.indexOf(e);\n      return -1 === o ? !i && s ? t[n - 1] : t[0] : (o += i ? 1 : -1, s && (o = (o + n) % n), t[Math.max(0, Math.min(o, n - 1))]);\n    },\n    A = /[^.]*(?=\\..*)\\.|.*/,\n    E = /\\..*/,\n    C = /::\\d+$/,\n    T = {};\n  let k = 1;\n  const $ = {\n      mouseenter: \"mouseover\",\n      mouseleave: \"mouseout\"\n    },\n    S = new Set([\"click\", \"dblclick\", \"mouseup\", \"mousedown\", \"contextmenu\", \"mousewheel\", \"DOMMouseScroll\", \"mouseover\", \"mouseout\", \"mousemove\", \"selectstart\", \"selectend\", \"keydown\", \"keypress\", \"keyup\", \"orientationchange\", \"touchstart\", \"touchmove\", \"touchend\", \"touchcancel\", \"pointerdown\", \"pointermove\", \"pointerup\", \"pointerleave\", \"pointercancel\", \"gesturestart\", \"gesturechange\", \"gestureend\", \"focus\", \"blur\", \"change\", \"reset\", \"select\", \"submit\", \"focusin\", \"focusout\", \"load\", \"unload\", \"beforeunload\", \"resize\", \"move\", \"DOMContentLoaded\", \"readystatechange\", \"error\", \"abort\", \"scroll\"]);\n  function L(t, e) {\n    return e && `${e}::${k++}` || t.uidEvent || k++;\n  }\n  function O(t) {\n    const e = L(t);\n    return t.uidEvent = e, T[e] = T[e] || {}, T[e];\n  }\n  function I(t, e, i = null) {\n    return Object.values(t).find(t => t.callable === e && t.delegationSelector === i);\n  }\n  function D(t, e, i) {\n    const s = \"string\" == typeof e,\n      n = s ? i : e || i;\n    let o = M(t);\n    return S.has(o) || (o = t), [s, n, o];\n  }\n  function N(t, e, i, s, n) {\n    if (\"string\" != typeof e || !t) return;\n    let [o, r, a] = D(e, i, s);\n    if (e in $) {\n      const t = t => function (e) {\n        if (!e.relatedTarget || e.relatedTarget !== e.delegateTarget && !e.delegateTarget.contains(e.relatedTarget)) return t.call(this, e);\n      };\n      r = t(r);\n    }\n    const l = O(t),\n      c = l[a] || (l[a] = {}),\n      h = I(c, r, o ? i : null);\n    if (h) return void (h.oneOff = h.oneOff && n);\n    const d = L(r, e.replace(A, \"\")),\n      u = o ? function (t, e, i) {\n        return function s(n) {\n          const o = t.querySelectorAll(e);\n          for (let {\n            target: r\n          } = n; r && r !== this; r = r.parentNode) for (const a of o) if (a === r) return F(n, {\n            delegateTarget: r\n          }), s.oneOff && j.off(t, n.type, e, i), i.apply(r, [n]);\n        };\n      }(t, i, r) : function (t, e) {\n        return function i(s) {\n          return F(s, {\n            delegateTarget: t\n          }), i.oneOff && j.off(t, s.type, e), e.apply(t, [s]);\n        };\n      }(t, r);\n    u.delegationSelector = o ? i : null, u.callable = r, u.oneOff = n, u.uidEvent = d, c[d] = u, t.addEventListener(a, u, o);\n  }\n  function P(t, e, i, s, n) {\n    const o = I(e[i], s, n);\n    o && (t.removeEventListener(i, o, Boolean(n)), delete e[i][o.uidEvent]);\n  }\n  function x(t, e, i, s) {\n    const n = e[i] || {};\n    for (const [o, r] of Object.entries(n)) o.includes(s) && P(t, e, i, r.callable, r.delegationSelector);\n  }\n  function M(t) {\n    return t = t.replace(E, \"\"), $[t] || t;\n  }\n  const j = {\n    on(t, e, i, s) {\n      N(t, e, i, s, !1);\n    },\n    one(t, e, i, s) {\n      N(t, e, i, s, !0);\n    },\n    off(t, e, i, s) {\n      if (\"string\" != typeof e || !t) return;\n      const [n, o, r] = D(e, i, s),\n        a = r !== e,\n        l = O(t),\n        c = l[r] || {},\n        h = e.startsWith(\".\");\n      if (void 0 === o) {\n        if (h) for (const i of Object.keys(l)) x(t, l, i, e.slice(1));\n        for (const [i, s] of Object.entries(c)) {\n          const n = i.replace(C, \"\");\n          a && !e.includes(n) || P(t, l, r, s.callable, s.delegationSelector);\n        }\n      } else {\n        if (!Object.keys(c).length) return;\n        P(t, l, r, o, n ? i : null);\n      }\n    },\n    trigger(t, e, i) {\n      if (\"string\" != typeof e || !t) return null;\n      const s = f();\n      let n = null,\n        o = !0,\n        r = !0,\n        a = !1;\n      e !== M(e) && s && (n = s.Event(e, i), s(t).trigger(n), o = !n.isPropagationStopped(), r = !n.isImmediatePropagationStopped(), a = n.isDefaultPrevented());\n      const l = F(new Event(e, {\n        bubbles: o,\n        cancelable: !0\n      }), i);\n      return a && l.preventDefault(), r && t.dispatchEvent(l), l.defaultPrevented && n && n.preventDefault(), l;\n    }\n  };\n  function F(t, e = {}) {\n    for (const [i, s] of Object.entries(e)) try {\n      t[i] = s;\n    } catch (e) {\n      Object.defineProperty(t, i, {\n        configurable: !0,\n        get: () => s\n      });\n    }\n    return t;\n  }\n  function z(t) {\n    if (\"true\" === t) return !0;\n    if (\"false\" === t) return !1;\n    if (t === Number(t).toString()) return Number(t);\n    if (\"\" === t || \"null\" === t) return null;\n    if (\"string\" != typeof t) return t;\n    try {\n      return JSON.parse(decodeURIComponent(t));\n    } catch (e) {\n      return t;\n    }\n  }\n  function H(t) {\n    return t.replace(/[A-Z]/g, t => `-${t.toLowerCase()}`);\n  }\n  const B = {\n    setDataAttribute(t, e, i) {\n      t.setAttribute(`data-bs-${H(e)}`, i);\n    },\n    removeDataAttribute(t, e) {\n      t.removeAttribute(`data-bs-${H(e)}`);\n    },\n    getDataAttributes(t) {\n      if (!t) return {};\n      const e = {},\n        i = Object.keys(t.dataset).filter(t => t.startsWith(\"bs\") && !t.startsWith(\"bsConfig\"));\n      for (const s of i) {\n        let i = s.replace(/^bs/, \"\");\n        i = i.charAt(0).toLowerCase() + i.slice(1, i.length), e[i] = z(t.dataset[s]);\n      }\n      return e;\n    },\n    getDataAttribute: (t, e) => z(t.getAttribute(`data-bs-${H(e)}`))\n  };\n  class q {\n    static get Default() {\n      return {};\n    }\n    static get DefaultType() {\n      return {};\n    }\n    static get NAME() {\n      throw new Error('You have to implement the static method \"NAME\", for each component!');\n    }\n    _getConfig(t) {\n      return t = this._mergeConfigObj(t), t = this._configAfterMerge(t), this._typeCheckConfig(t), t;\n    }\n    _configAfterMerge(t) {\n      return t;\n    }\n    _mergeConfigObj(t, e) {\n      const i = l(e) ? B.getDataAttribute(e, \"config\") : {};\n      return {\n        ...this.constructor.Default,\n        ...(\"object\" == typeof i ? i : {}),\n        ...(l(e) ? B.getDataAttributes(e) : {}),\n        ...(\"object\" == typeof t ? t : {})\n      };\n    }\n    _typeCheckConfig(t, e = this.constructor.DefaultType) {\n      for (const [s, n] of Object.entries(e)) {\n        const e = t[s],\n          o = l(e) ? \"element\" : null == (i = e) ? `${i}` : Object.prototype.toString.call(i).match(/\\s([a-z]+)/i)[1].toLowerCase();\n        if (!new RegExp(n).test(o)) throw new TypeError(`${this.constructor.NAME.toUpperCase()}: Option \"${s}\" provided type \"${o}\" but expected type \"${n}\".`);\n      }\n      var i;\n    }\n  }\n  class W extends q {\n    constructor(t, e) {\n      super(), (t = c(t)) && (this._element = t, this._config = this._getConfig(e), n.set(this._element, this.constructor.DATA_KEY, this));\n    }\n    dispose() {\n      n.remove(this._element, this.constructor.DATA_KEY), j.off(this._element, this.constructor.EVENT_KEY);\n      for (const t of Object.getOwnPropertyNames(this)) this[t] = null;\n    }\n    _queueCallback(t, e, i = !0) {\n      y(t, e, i);\n    }\n    _getConfig(t) {\n      return t = this._mergeConfigObj(t, this._element), t = this._configAfterMerge(t), this._typeCheckConfig(t), t;\n    }\n    static getInstance(t) {\n      return n.get(c(t), this.DATA_KEY);\n    }\n    static getOrCreateInstance(t, e = {}) {\n      return this.getInstance(t) || new this(t, \"object\" == typeof e ? e : null);\n    }\n    static get VERSION() {\n      return \"5.3.3\";\n    }\n    static get DATA_KEY() {\n      return `bs.${this.NAME}`;\n    }\n    static get EVENT_KEY() {\n      return `.${this.DATA_KEY}`;\n    }\n    static eventName(t) {\n      return `${t}${this.EVENT_KEY}`;\n    }\n  }\n  const R = t => {\n      let e = t.getAttribute(\"data-bs-target\");\n      if (!e || \"#\" === e) {\n        let i = t.getAttribute(\"href\");\n        if (!i || !i.includes(\"#\") && !i.startsWith(\".\")) return null;\n        i.includes(\"#\") && !i.startsWith(\"#\") && (i = `#${i.split(\"#\")[1]}`), e = i && \"#\" !== i ? i.trim() : null;\n      }\n      return e ? e.split(\",\").map(t => r(t)).join(\",\") : null;\n    },\n    K = {\n      find: (t, e = document.documentElement) => [].concat(...Element.prototype.querySelectorAll.call(e, t)),\n      findOne: (t, e = document.documentElement) => Element.prototype.querySelector.call(e, t),\n      children: (t, e) => [].concat(...t.children).filter(t => t.matches(e)),\n      parents(t, e) {\n        const i = [];\n        let s = t.parentNode.closest(e);\n        for (; s;) i.push(s), s = s.parentNode.closest(e);\n        return i;\n      },\n      prev(t, e) {\n        let i = t.previousElementSibling;\n        for (; i;) {\n          if (i.matches(e)) return [i];\n          i = i.previousElementSibling;\n        }\n        return [];\n      },\n      next(t, e) {\n        let i = t.nextElementSibling;\n        for (; i;) {\n          if (i.matches(e)) return [i];\n          i = i.nextElementSibling;\n        }\n        return [];\n      },\n      focusableChildren(t) {\n        const e = [\"a\", \"button\", \"input\", \"textarea\", \"select\", \"details\", \"[tabindex]\", '[contenteditable=\"true\"]'].map(t => `${t}:not([tabindex^=\"-\"])`).join(\",\");\n        return this.find(e, t).filter(t => !d(t) && h(t));\n      },\n      getSelectorFromElement(t) {\n        const e = R(t);\n        return e && K.findOne(e) ? e : null;\n      },\n      getElementFromSelector(t) {\n        const e = R(t);\n        return e ? K.findOne(e) : null;\n      },\n      getMultipleElementsFromSelector(t) {\n        const e = R(t);\n        return e ? K.find(e) : [];\n      }\n    },\n    V = (t, e = \"hide\") => {\n      const i = `click.dismiss${t.EVENT_KEY}`,\n        s = t.NAME;\n      j.on(document, i, `[data-bs-dismiss=\"${s}\"]`, function (i) {\n        if ([\"A\", \"AREA\"].includes(this.tagName) && i.preventDefault(), d(this)) return;\n        const n = K.getElementFromSelector(this) || this.closest(`.${s}`);\n        t.getOrCreateInstance(n)[e]();\n      });\n    },\n    Q = \".bs.alert\",\n    X = `close${Q}`,\n    Y = `closed${Q}`;\n  class U extends W {\n    static get NAME() {\n      return \"alert\";\n    }\n    close() {\n      if (j.trigger(this._element, X).defaultPrevented) return;\n      this._element.classList.remove(\"show\");\n      const t = this._element.classList.contains(\"fade\");\n      this._queueCallback(() => this._destroyElement(), this._element, t);\n    }\n    _destroyElement() {\n      this._element.remove(), j.trigger(this._element, Y), this.dispose();\n    }\n    static jQueryInterface(t) {\n      return this.each(function () {\n        const e = U.getOrCreateInstance(this);\n        if (\"string\" == typeof t) {\n          if (void 0 === e[t] || t.startsWith(\"_\") || \"constructor\" === t) throw new TypeError(`No method named \"${t}\"`);\n          e[t](this);\n        }\n      });\n    }\n  }\n  V(U, \"close\"), b(U);\n  const G = '[data-bs-toggle=\"button\"]';\n  class J extends W {\n    static get NAME() {\n      return \"button\";\n    }\n    toggle() {\n      this._element.setAttribute(\"aria-pressed\", this._element.classList.toggle(\"active\"));\n    }\n    static jQueryInterface(t) {\n      return this.each(function () {\n        const e = J.getOrCreateInstance(this);\n        \"toggle\" === t && e[t]();\n      });\n    }\n  }\n  j.on(document, \"click.bs.button.data-api\", G, t => {\n    t.preventDefault();\n    const e = t.target.closest(G);\n    J.getOrCreateInstance(e).toggle();\n  }), b(J);\n  const Z = \".bs.swipe\",\n    tt = `touchstart${Z}`,\n    et = `touchmove${Z}`,\n    it = `touchend${Z}`,\n    st = `pointerdown${Z}`,\n    nt = `pointerup${Z}`,\n    ot = {\n      endCallback: null,\n      leftCallback: null,\n      rightCallback: null\n    },\n    rt = {\n      endCallback: \"(function|null)\",\n      leftCallback: \"(function|null)\",\n      rightCallback: \"(function|null)\"\n    };\n  class at extends q {\n    constructor(t, e) {\n      super(), this._element = t, t && at.isSupported() && (this._config = this._getConfig(e), this._deltaX = 0, this._supportPointerEvents = Boolean(window.PointerEvent), this._initEvents());\n    }\n    static get Default() {\n      return ot;\n    }\n    static get DefaultType() {\n      return rt;\n    }\n    static get NAME() {\n      return \"swipe\";\n    }\n    dispose() {\n      j.off(this._element, Z);\n    }\n    _start(t) {\n      this._supportPointerEvents ? this._eventIsPointerPenTouch(t) && (this._deltaX = t.clientX) : this._deltaX = t.touches[0].clientX;\n    }\n    _end(t) {\n      this._eventIsPointerPenTouch(t) && (this._deltaX = t.clientX - this._deltaX), this._handleSwipe(), v(this._config.endCallback);\n    }\n    _move(t) {\n      this._deltaX = t.touches && t.touches.length > 1 ? 0 : t.touches[0].clientX - this._deltaX;\n    }\n    _handleSwipe() {\n      const t = Math.abs(this._deltaX);\n      if (t <= 40) return;\n      const e = t / this._deltaX;\n      this._deltaX = 0, e && v(e > 0 ? this._config.rightCallback : this._config.leftCallback);\n    }\n    _initEvents() {\n      this._supportPointerEvents ? (j.on(this._element, st, t => this._start(t)), j.on(this._element, nt, t => this._end(t)), this._element.classList.add(\"pointer-event\")) : (j.on(this._element, tt, t => this._start(t)), j.on(this._element, et, t => this._move(t)), j.on(this._element, it, t => this._end(t)));\n    }\n    _eventIsPointerPenTouch(t) {\n      return this._supportPointerEvents && (\"pen\" === t.pointerType || \"touch\" === t.pointerType);\n    }\n    static isSupported() {\n      return \"ontouchstart\" in document.documentElement || navigator.maxTouchPoints > 0;\n    }\n  }\n  const lt = \".bs.carousel\",\n    ct = \".data-api\",\n    ht = \"next\",\n    dt = \"prev\",\n    ut = \"left\",\n    _t = \"right\",\n    gt = `slide${lt}`,\n    ft = `slid${lt}`,\n    mt = `keydown${lt}`,\n    pt = `mouseenter${lt}`,\n    bt = `mouseleave${lt}`,\n    vt = `dragstart${lt}`,\n    yt = `load${lt}${ct}`,\n    wt = `click${lt}${ct}`,\n    At = \"carousel\",\n    Et = \"active\",\n    Ct = \".active\",\n    Tt = \".carousel-item\",\n    kt = Ct + Tt,\n    $t = {\n      ArrowLeft: _t,\n      ArrowRight: ut\n    },\n    St = {\n      interval: 5e3,\n      keyboard: !0,\n      pause: \"hover\",\n      ride: !1,\n      touch: !0,\n      wrap: !0\n    },\n    Lt = {\n      interval: \"(number|boolean)\",\n      keyboard: \"boolean\",\n      pause: \"(string|boolean)\",\n      ride: \"(boolean|string)\",\n      touch: \"boolean\",\n      wrap: \"boolean\"\n    };\n  class Ot extends W {\n    constructor(t, e) {\n      super(t, e), this._interval = null, this._activeElement = null, this._isSliding = !1, this.touchTimeout = null, this._swipeHelper = null, this._indicatorsElement = K.findOne(\".carousel-indicators\", this._element), this._addEventListeners(), this._config.ride === At && this.cycle();\n    }\n    static get Default() {\n      return St;\n    }\n    static get DefaultType() {\n      return Lt;\n    }\n    static get NAME() {\n      return \"carousel\";\n    }\n    next() {\n      this._slide(ht);\n    }\n    nextWhenVisible() {\n      !document.hidden && h(this._element) && this.next();\n    }\n    prev() {\n      this._slide(dt);\n    }\n    pause() {\n      this._isSliding && a(this._element), this._clearInterval();\n    }\n    cycle() {\n      this._clearInterval(), this._updateInterval(), this._interval = setInterval(() => this.nextWhenVisible(), this._config.interval);\n    }\n    _maybeEnableCycle() {\n      this._config.ride && (this._isSliding ? j.one(this._element, ft, () => this.cycle()) : this.cycle());\n    }\n    to(t) {\n      const e = this._getItems();\n      if (t > e.length - 1 || t < 0) return;\n      if (this._isSliding) return void j.one(this._element, ft, () => this.to(t));\n      const i = this._getItemIndex(this._getActive());\n      if (i === t) return;\n      const s = t > i ? ht : dt;\n      this._slide(s, e[t]);\n    }\n    dispose() {\n      this._swipeHelper && this._swipeHelper.dispose(), super.dispose();\n    }\n    _configAfterMerge(t) {\n      return t.defaultInterval = t.interval, t;\n    }\n    _addEventListeners() {\n      this._config.keyboard && j.on(this._element, mt, t => this._keydown(t)), \"hover\" === this._config.pause && (j.on(this._element, pt, () => this.pause()), j.on(this._element, bt, () => this._maybeEnableCycle())), this._config.touch && at.isSupported() && this._addTouchEventListeners();\n    }\n    _addTouchEventListeners() {\n      for (const t of K.find(\".carousel-item img\", this._element)) j.on(t, vt, t => t.preventDefault());\n      const t = {\n        leftCallback: () => this._slide(this._directionToOrder(ut)),\n        rightCallback: () => this._slide(this._directionToOrder(_t)),\n        endCallback: () => {\n          \"hover\" === this._config.pause && (this.pause(), this.touchTimeout && clearTimeout(this.touchTimeout), this.touchTimeout = setTimeout(() => this._maybeEnableCycle(), 500 + this._config.interval));\n        }\n      };\n      this._swipeHelper = new at(this._element, t);\n    }\n    _keydown(t) {\n      if (/input|textarea/i.test(t.target.tagName)) return;\n      const e = $t[t.key];\n      e && (t.preventDefault(), this._slide(this._directionToOrder(e)));\n    }\n    _getItemIndex(t) {\n      return this._getItems().indexOf(t);\n    }\n    _setActiveIndicatorElement(t) {\n      if (!this._indicatorsElement) return;\n      const e = K.findOne(Ct, this._indicatorsElement);\n      e.classList.remove(Et), e.removeAttribute(\"aria-current\");\n      const i = K.findOne(`[data-bs-slide-to=\"${t}\"]`, this._indicatorsElement);\n      i && (i.classList.add(Et), i.setAttribute(\"aria-current\", \"true\"));\n    }\n    _updateInterval() {\n      const t = this._activeElement || this._getActive();\n      if (!t) return;\n      const e = Number.parseInt(t.getAttribute(\"data-bs-interval\"), 10);\n      this._config.interval = e || this._config.defaultInterval;\n    }\n    _slide(t, e = null) {\n      if (this._isSliding) return;\n      const i = this._getActive(),\n        s = t === ht,\n        n = e || w(this._getItems(), i, s, this._config.wrap);\n      if (n === i) return;\n      const o = this._getItemIndex(n),\n        r = e => j.trigger(this._element, e, {\n          relatedTarget: n,\n          direction: this._orderToDirection(t),\n          from: this._getItemIndex(i),\n          to: o\n        });\n      if (r(gt).defaultPrevented) return;\n      if (!i || !n) return;\n      const a = Boolean(this._interval);\n      this.pause(), this._isSliding = !0, this._setActiveIndicatorElement(o), this._activeElement = n;\n      const l = s ? \"carousel-item-start\" : \"carousel-item-end\",\n        c = s ? \"carousel-item-next\" : \"carousel-item-prev\";\n      n.classList.add(c), g(n), i.classList.add(l), n.classList.add(l), this._queueCallback(() => {\n        n.classList.remove(l, c), n.classList.add(Et), i.classList.remove(Et, c, l), this._isSliding = !1, r(ft);\n      }, i, this._isAnimated()), a && this.cycle();\n    }\n    _isAnimated() {\n      return this._element.classList.contains(\"slide\");\n    }\n    _getActive() {\n      return K.findOne(kt, this._element);\n    }\n    _getItems() {\n      return K.find(Tt, this._element);\n    }\n    _clearInterval() {\n      this._interval && (clearInterval(this._interval), this._interval = null);\n    }\n    _directionToOrder(t) {\n      return p() ? t === ut ? dt : ht : t === ut ? ht : dt;\n    }\n    _orderToDirection(t) {\n      return p() ? t === dt ? ut : _t : t === dt ? _t : ut;\n    }\n    static jQueryInterface(t) {\n      return this.each(function () {\n        const e = Ot.getOrCreateInstance(this, t);\n        if (\"number\" != typeof t) {\n          if (\"string\" == typeof t) {\n            if (void 0 === e[t] || t.startsWith(\"_\") || \"constructor\" === t) throw new TypeError(`No method named \"${t}\"`);\n            e[t]();\n          }\n        } else e.to(t);\n      });\n    }\n  }\n  j.on(document, wt, \"[data-bs-slide], [data-bs-slide-to]\", function (t) {\n    const e = K.getElementFromSelector(this);\n    if (!e || !e.classList.contains(At)) return;\n    t.preventDefault();\n    const i = Ot.getOrCreateInstance(e),\n      s = this.getAttribute(\"data-bs-slide-to\");\n    return s ? (i.to(s), void i._maybeEnableCycle()) : \"next\" === B.getDataAttribute(this, \"slide\") ? (i.next(), void i._maybeEnableCycle()) : (i.prev(), void i._maybeEnableCycle());\n  }), j.on(window, yt, () => {\n    const t = K.find('[data-bs-ride=\"carousel\"]');\n    for (const e of t) Ot.getOrCreateInstance(e);\n  }), b(Ot);\n  const It = \".bs.collapse\",\n    Dt = `show${It}`,\n    Nt = `shown${It}`,\n    Pt = `hide${It}`,\n    xt = `hidden${It}`,\n    Mt = `click${It}.data-api`,\n    jt = \"show\",\n    Ft = \"collapse\",\n    zt = \"collapsing\",\n    Ht = `:scope .${Ft} .${Ft}`,\n    Bt = '[data-bs-toggle=\"collapse\"]',\n    qt = {\n      parent: null,\n      toggle: !0\n    },\n    Wt = {\n      parent: \"(null|element)\",\n      toggle: \"boolean\"\n    };\n  class Rt extends W {\n    constructor(t, e) {\n      super(t, e), this._isTransitioning = !1, this._triggerArray = [];\n      const i = K.find(Bt);\n      for (const t of i) {\n        const e = K.getSelectorFromElement(t),\n          i = K.find(e).filter(t => t === this._element);\n        null !== e && i.length && this._triggerArray.push(t);\n      }\n      this._initializeChildren(), this._config.parent || this._addAriaAndCollapsedClass(this._triggerArray, this._isShown()), this._config.toggle && this.toggle();\n    }\n    static get Default() {\n      return qt;\n    }\n    static get DefaultType() {\n      return Wt;\n    }\n    static get NAME() {\n      return \"collapse\";\n    }\n    toggle() {\n      this._isShown() ? this.hide() : this.show();\n    }\n    show() {\n      if (this._isTransitioning || this._isShown()) return;\n      let t = [];\n      if (this._config.parent && (t = this._getFirstLevelChildren(\".collapse.show, .collapse.collapsing\").filter(t => t !== this._element).map(t => Rt.getOrCreateInstance(t, {\n        toggle: !1\n      }))), t.length && t[0]._isTransitioning) return;\n      if (j.trigger(this._element, Dt).defaultPrevented) return;\n      for (const e of t) e.hide();\n      const e = this._getDimension();\n      this._element.classList.remove(Ft), this._element.classList.add(zt), this._element.style[e] = 0, this._addAriaAndCollapsedClass(this._triggerArray, !0), this._isTransitioning = !0;\n      const i = `scroll${e[0].toUpperCase() + e.slice(1)}`;\n      this._queueCallback(() => {\n        this._isTransitioning = !1, this._element.classList.remove(zt), this._element.classList.add(Ft, jt), this._element.style[e] = \"\", j.trigger(this._element, Nt);\n      }, this._element, !0), this._element.style[e] = `${this._element[i]}px`;\n    }\n    hide() {\n      if (this._isTransitioning || !this._isShown()) return;\n      if (j.trigger(this._element, Pt).defaultPrevented) return;\n      const t = this._getDimension();\n      this._element.style[t] = `${this._element.getBoundingClientRect()[t]}px`, g(this._element), this._element.classList.add(zt), this._element.classList.remove(Ft, jt);\n      for (const t of this._triggerArray) {\n        const e = K.getElementFromSelector(t);\n        e && !this._isShown(e) && this._addAriaAndCollapsedClass([t], !1);\n      }\n      this._isTransitioning = !0, this._element.style[t] = \"\", this._queueCallback(() => {\n        this._isTransitioning = !1, this._element.classList.remove(zt), this._element.classList.add(Ft), j.trigger(this._element, xt);\n      }, this._element, !0);\n    }\n    _isShown(t = this._element) {\n      return t.classList.contains(jt);\n    }\n    _configAfterMerge(t) {\n      return t.toggle = Boolean(t.toggle), t.parent = c(t.parent), t;\n    }\n    _getDimension() {\n      return this._element.classList.contains(\"collapse-horizontal\") ? \"width\" : \"height\";\n    }\n    _initializeChildren() {\n      if (!this._config.parent) return;\n      const t = this._getFirstLevelChildren(Bt);\n      for (const e of t) {\n        const t = K.getElementFromSelector(e);\n        t && this._addAriaAndCollapsedClass([e], this._isShown(t));\n      }\n    }\n    _getFirstLevelChildren(t) {\n      const e = K.find(Ht, this._config.parent);\n      return K.find(t, this._config.parent).filter(t => !e.includes(t));\n    }\n    _addAriaAndCollapsedClass(t, e) {\n      if (t.length) for (const i of t) i.classList.toggle(\"collapsed\", !e), i.setAttribute(\"aria-expanded\", e);\n    }\n    static jQueryInterface(t) {\n      const e = {};\n      return \"string\" == typeof t && /show|hide/.test(t) && (e.toggle = !1), this.each(function () {\n        const i = Rt.getOrCreateInstance(this, e);\n        if (\"string\" == typeof t) {\n          if (void 0 === i[t]) throw new TypeError(`No method named \"${t}\"`);\n          i[t]();\n        }\n      });\n    }\n  }\n  j.on(document, Mt, Bt, function (t) {\n    (\"A\" === t.target.tagName || t.delegateTarget && \"A\" === t.delegateTarget.tagName) && t.preventDefault();\n    for (const t of K.getMultipleElementsFromSelector(this)) Rt.getOrCreateInstance(t, {\n      toggle: !1\n    }).toggle();\n  }), b(Rt);\n  const Kt = \"dropdown\",\n    Vt = \".bs.dropdown\",\n    Qt = \".data-api\",\n    Xt = \"ArrowUp\",\n    Yt = \"ArrowDown\",\n    Ut = `hide${Vt}`,\n    Gt = `hidden${Vt}`,\n    Jt = `show${Vt}`,\n    Zt = `shown${Vt}`,\n    te = `click${Vt}${Qt}`,\n    ee = `keydown${Vt}${Qt}`,\n    ie = `keyup${Vt}${Qt}`,\n    se = \"show\",\n    ne = '[data-bs-toggle=\"dropdown\"]:not(.disabled):not(:disabled)',\n    oe = `${ne}.${se}`,\n    re = \".dropdown-menu\",\n    ae = p() ? \"top-end\" : \"top-start\",\n    le = p() ? \"top-start\" : \"top-end\",\n    ce = p() ? \"bottom-end\" : \"bottom-start\",\n    he = p() ? \"bottom-start\" : \"bottom-end\",\n    de = p() ? \"left-start\" : \"right-start\",\n    ue = p() ? \"right-start\" : \"left-start\",\n    _e = {\n      autoClose: !0,\n      boundary: \"clippingParents\",\n      display: \"dynamic\",\n      offset: [0, 2],\n      popperConfig: null,\n      reference: \"toggle\"\n    },\n    ge = {\n      autoClose: \"(boolean|string)\",\n      boundary: \"(string|element)\",\n      display: \"string\",\n      offset: \"(array|string|function)\",\n      popperConfig: \"(null|object|function)\",\n      reference: \"(string|element|object)\"\n    };\n  class fe extends W {\n    constructor(t, e) {\n      super(t, e), this._popper = null, this._parent = this._element.parentNode, this._menu = K.next(this._element, re)[0] || K.prev(this._element, re)[0] || K.findOne(re, this._parent), this._inNavbar = this._detectNavbar();\n    }\n    static get Default() {\n      return _e;\n    }\n    static get DefaultType() {\n      return ge;\n    }\n    static get NAME() {\n      return Kt;\n    }\n    toggle() {\n      return this._isShown() ? this.hide() : this.show();\n    }\n    show() {\n      if (d(this._element) || this._isShown()) return;\n      const t = {\n        relatedTarget: this._element\n      };\n      if (!j.trigger(this._element, Jt, t).defaultPrevented) {\n        if (this._createPopper(), \"ontouchstart\" in document.documentElement && !this._parent.closest(\".navbar-nav\")) for (const t of [].concat(...document.body.children)) j.on(t, \"mouseover\", _);\n        this._element.focus(), this._element.setAttribute(\"aria-expanded\", !0), this._menu.classList.add(se), this._element.classList.add(se), j.trigger(this._element, Zt, t);\n      }\n    }\n    hide() {\n      if (d(this._element) || !this._isShown()) return;\n      const t = {\n        relatedTarget: this._element\n      };\n      this._completeHide(t);\n    }\n    dispose() {\n      this._popper && this._popper.destroy(), super.dispose();\n    }\n    update() {\n      this._inNavbar = this._detectNavbar(), this._popper && this._popper.update();\n    }\n    _completeHide(t) {\n      if (!j.trigger(this._element, Ut, t).defaultPrevented) {\n        if (\"ontouchstart\" in document.documentElement) for (const t of [].concat(...document.body.children)) j.off(t, \"mouseover\", _);\n        this._popper && this._popper.destroy(), this._menu.classList.remove(se), this._element.classList.remove(se), this._element.setAttribute(\"aria-expanded\", \"false\"), B.removeDataAttribute(this._menu, \"popper\"), j.trigger(this._element, Gt, t);\n      }\n    }\n    _getConfig(t) {\n      if (\"object\" == typeof (t = super._getConfig(t)).reference && !l(t.reference) && \"function\" != typeof t.reference.getBoundingClientRect) throw new TypeError(`${Kt.toUpperCase()}: Option \"reference\" provided type \"object\" without a required \"getBoundingClientRect\" method.`);\n      return t;\n    }\n    _createPopper() {\n      if (void 0 === i) throw new TypeError(\"Bootstrap's dropdowns require Popper (https://popper.js.org)\");\n      let t = this._element;\n      \"parent\" === this._config.reference ? t = this._parent : l(this._config.reference) ? t = c(this._config.reference) : \"object\" == typeof this._config.reference && (t = this._config.reference);\n      const e = this._getPopperConfig();\n      this._popper = i.createPopper(t, this._menu, e);\n    }\n    _isShown() {\n      return this._menu.classList.contains(se);\n    }\n    _getPlacement() {\n      const t = this._parent;\n      if (t.classList.contains(\"dropend\")) return de;\n      if (t.classList.contains(\"dropstart\")) return ue;\n      if (t.classList.contains(\"dropup-center\")) return \"top\";\n      if (t.classList.contains(\"dropdown-center\")) return \"bottom\";\n      const e = \"end\" === getComputedStyle(this._menu).getPropertyValue(\"--bs-position\").trim();\n      return t.classList.contains(\"dropup\") ? e ? le : ae : e ? he : ce;\n    }\n    _detectNavbar() {\n      return null !== this._element.closest(\".navbar\");\n    }\n    _getOffset() {\n      const {\n        offset: t\n      } = this._config;\n      return \"string\" == typeof t ? t.split(\",\").map(t => Number.parseInt(t, 10)) : \"function\" == typeof t ? e => t(e, this._element) : t;\n    }\n    _getPopperConfig() {\n      const t = {\n        placement: this._getPlacement(),\n        modifiers: [{\n          name: \"preventOverflow\",\n          options: {\n            boundary: this._config.boundary\n          }\n        }, {\n          name: \"offset\",\n          options: {\n            offset: this._getOffset()\n          }\n        }]\n      };\n      return (this._inNavbar || \"static\" === this._config.display) && (B.setDataAttribute(this._menu, \"popper\", \"static\"), t.modifiers = [{\n        name: \"applyStyles\",\n        enabled: !1\n      }]), {\n        ...t,\n        ...v(this._config.popperConfig, [t])\n      };\n    }\n    _selectMenuItem({\n      key: t,\n      target: e\n    }) {\n      const i = K.find(\".dropdown-menu .dropdown-item:not(.disabled):not(:disabled)\", this._menu).filter(t => h(t));\n      i.length && w(i, e, t === Yt, !i.includes(e)).focus();\n    }\n    static jQueryInterface(t) {\n      return this.each(function () {\n        const e = fe.getOrCreateInstance(this, t);\n        if (\"string\" == typeof t) {\n          if (void 0 === e[t]) throw new TypeError(`No method named \"${t}\"`);\n          e[t]();\n        }\n      });\n    }\n    static clearMenus(t) {\n      if (2 === t.button || \"keyup\" === t.type && \"Tab\" !== t.key) return;\n      const e = K.find(oe);\n      for (const i of e) {\n        const e = fe.getInstance(i);\n        if (!e || !1 === e._config.autoClose) continue;\n        const s = t.composedPath(),\n          n = s.includes(e._menu);\n        if (s.includes(e._element) || \"inside\" === e._config.autoClose && !n || \"outside\" === e._config.autoClose && n) continue;\n        if (e._menu.contains(t.target) && (\"keyup\" === t.type && \"Tab\" === t.key || /input|select|option|textarea|form/i.test(t.target.tagName))) continue;\n        const o = {\n          relatedTarget: e._element\n        };\n        \"click\" === t.type && (o.clickEvent = t), e._completeHide(o);\n      }\n    }\n    static dataApiKeydownHandler(t) {\n      const e = /input|textarea/i.test(t.target.tagName),\n        i = \"Escape\" === t.key,\n        s = [Xt, Yt].includes(t.key);\n      if (!s && !i) return;\n      if (e && !i) return;\n      t.preventDefault();\n      const n = this.matches(ne) ? this : K.prev(this, ne)[0] || K.next(this, ne)[0] || K.findOne(ne, t.delegateTarget.parentNode),\n        o = fe.getOrCreateInstance(n);\n      if (s) return t.stopPropagation(), o.show(), void o._selectMenuItem(t);\n      o._isShown() && (t.stopPropagation(), o.hide(), n.focus());\n    }\n  }\n  j.on(document, ee, ne, fe.dataApiKeydownHandler), j.on(document, ee, re, fe.dataApiKeydownHandler), j.on(document, te, fe.clearMenus), j.on(document, ie, fe.clearMenus), j.on(document, te, ne, function (t) {\n    t.preventDefault(), fe.getOrCreateInstance(this).toggle();\n  }), b(fe);\n  const me = \"backdrop\",\n    pe = \"show\",\n    be = `mousedown.bs.${me}`,\n    ve = {\n      className: \"modal-backdrop\",\n      clickCallback: null,\n      isAnimated: !1,\n      isVisible: !0,\n      rootElement: \"body\"\n    },\n    ye = {\n      className: \"string\",\n      clickCallback: \"(function|null)\",\n      isAnimated: \"boolean\",\n      isVisible: \"boolean\",\n      rootElement: \"(element|string)\"\n    };\n  class we extends q {\n    constructor(t) {\n      super(), this._config = this._getConfig(t), this._isAppended = !1, this._element = null;\n    }\n    static get Default() {\n      return ve;\n    }\n    static get DefaultType() {\n      return ye;\n    }\n    static get NAME() {\n      return me;\n    }\n    show(t) {\n      if (!this._config.isVisible) return void v(t);\n      this._append();\n      const e = this._getElement();\n      this._config.isAnimated && g(e), e.classList.add(pe), this._emulateAnimation(() => {\n        v(t);\n      });\n    }\n    hide(t) {\n      this._config.isVisible ? (this._getElement().classList.remove(pe), this._emulateAnimation(() => {\n        this.dispose(), v(t);\n      })) : v(t);\n    }\n    dispose() {\n      this._isAppended && (j.off(this._element, be), this._element.remove(), this._isAppended = !1);\n    }\n    _getElement() {\n      if (!this._element) {\n        const t = document.createElement(\"div\");\n        t.className = this._config.className, this._config.isAnimated && t.classList.add(\"fade\"), this._element = t;\n      }\n      return this._element;\n    }\n    _configAfterMerge(t) {\n      return t.rootElement = c(t.rootElement), t;\n    }\n    _append() {\n      if (this._isAppended) return;\n      const t = this._getElement();\n      this._config.rootElement.append(t), j.on(t, be, () => {\n        v(this._config.clickCallback);\n      }), this._isAppended = !0;\n    }\n    _emulateAnimation(t) {\n      y(t, this._getElement(), this._config.isAnimated);\n    }\n  }\n  const Ae = \".bs.focustrap\",\n    Ee = `focusin${Ae}`,\n    Ce = `keydown.tab${Ae}`,\n    Te = \"backward\",\n    ke = {\n      autofocus: !0,\n      trapElement: null\n    },\n    $e = {\n      autofocus: \"boolean\",\n      trapElement: \"element\"\n    };\n  class Se extends q {\n    constructor(t) {\n      super(), this._config = this._getConfig(t), this._isActive = !1, this._lastTabNavDirection = null;\n    }\n    static get Default() {\n      return ke;\n    }\n    static get DefaultType() {\n      return $e;\n    }\n    static get NAME() {\n      return \"focustrap\";\n    }\n    activate() {\n      this._isActive || (this._config.autofocus && this._config.trapElement.focus(), j.off(document, Ae), j.on(document, Ee, t => this._handleFocusin(t)), j.on(document, Ce, t => this._handleKeydown(t)), this._isActive = !0);\n    }\n    deactivate() {\n      this._isActive && (this._isActive = !1, j.off(document, Ae));\n    }\n    _handleFocusin(t) {\n      const {\n        trapElement: e\n      } = this._config;\n      if (t.target === document || t.target === e || e.contains(t.target)) return;\n      const i = K.focusableChildren(e);\n      0 === i.length ? e.focus() : this._lastTabNavDirection === Te ? i[i.length - 1].focus() : i[0].focus();\n    }\n    _handleKeydown(t) {\n      \"Tab\" === t.key && (this._lastTabNavDirection = t.shiftKey ? Te : \"forward\");\n    }\n  }\n  const Le = \".fixed-top, .fixed-bottom, .is-fixed, .sticky-top\",\n    Oe = \".sticky-top\",\n    Ie = \"padding-right\",\n    De = \"margin-right\";\n  class Ne {\n    constructor() {\n      this._element = document.body;\n    }\n    getWidth() {\n      const t = document.documentElement.clientWidth;\n      return Math.abs(window.innerWidth - t);\n    }\n    hide() {\n      const t = this.getWidth();\n      this._disableOverFlow(), this._setElementAttributes(this._element, Ie, e => e + t), this._setElementAttributes(Le, Ie, e => e + t), this._setElementAttributes(Oe, De, e => e - t);\n    }\n    reset() {\n      this._resetElementAttributes(this._element, \"overflow\"), this._resetElementAttributes(this._element, Ie), this._resetElementAttributes(Le, Ie), this._resetElementAttributes(Oe, De);\n    }\n    isOverflowing() {\n      return this.getWidth() > 0;\n    }\n    _disableOverFlow() {\n      this._saveInitialAttribute(this._element, \"overflow\"), this._element.style.overflow = \"hidden\";\n    }\n    _setElementAttributes(t, e, i) {\n      const s = this.getWidth();\n      this._applyManipulationCallback(t, t => {\n        if (t !== this._element && window.innerWidth > t.clientWidth + s) return;\n        this._saveInitialAttribute(t, e);\n        const n = window.getComputedStyle(t).getPropertyValue(e);\n        t.style.setProperty(e, `${i(Number.parseFloat(n))}px`);\n      });\n    }\n    _saveInitialAttribute(t, e) {\n      const i = t.style.getPropertyValue(e);\n      i && B.setDataAttribute(t, e, i);\n    }\n    _resetElementAttributes(t, e) {\n      this._applyManipulationCallback(t, t => {\n        const i = B.getDataAttribute(t, e);\n        null !== i ? (B.removeDataAttribute(t, e), t.style.setProperty(e, i)) : t.style.removeProperty(e);\n      });\n    }\n    _applyManipulationCallback(t, e) {\n      if (l(t)) e(t);else for (const i of K.find(t, this._element)) e(i);\n    }\n  }\n  const Pe = \".bs.modal\",\n    xe = `hide${Pe}`,\n    Me = `hidePrevented${Pe}`,\n    je = `hidden${Pe}`,\n    Fe = `show${Pe}`,\n    ze = `shown${Pe}`,\n    He = `resize${Pe}`,\n    Be = `click.dismiss${Pe}`,\n    qe = `mousedown.dismiss${Pe}`,\n    We = `keydown.dismiss${Pe}`,\n    Re = `click${Pe}.data-api`,\n    Ke = \"modal-open\",\n    Ve = \"show\",\n    Qe = \"modal-static\",\n    Xe = {\n      backdrop: !0,\n      focus: !0,\n      keyboard: !0\n    },\n    Ye = {\n      backdrop: \"(boolean|string)\",\n      focus: \"boolean\",\n      keyboard: \"boolean\"\n    };\n  class Ue extends W {\n    constructor(t, e) {\n      super(t, e), this._dialog = K.findOne(\".modal-dialog\", this._element), this._backdrop = this._initializeBackDrop(), this._focustrap = this._initializeFocusTrap(), this._isShown = !1, this._isTransitioning = !1, this._scrollBar = new Ne(), this._addEventListeners();\n    }\n    static get Default() {\n      return Xe;\n    }\n    static get DefaultType() {\n      return Ye;\n    }\n    static get NAME() {\n      return \"modal\";\n    }\n    toggle(t) {\n      return this._isShown ? this.hide() : this.show(t);\n    }\n    show(t) {\n      this._isShown || this._isTransitioning || j.trigger(this._element, Fe, {\n        relatedTarget: t\n      }).defaultPrevented || (this._isShown = !0, this._isTransitioning = !0, this._scrollBar.hide(), document.body.classList.add(Ke), this._adjustDialog(), this._backdrop.show(() => this._showElement(t)));\n    }\n    hide() {\n      this._isShown && !this._isTransitioning && (j.trigger(this._element, xe).defaultPrevented || (this._isShown = !1, this._isTransitioning = !0, this._focustrap.deactivate(), this._element.classList.remove(Ve), this._queueCallback(() => this._hideModal(), this._element, this._isAnimated())));\n    }\n    dispose() {\n      j.off(window, Pe), j.off(this._dialog, Pe), this._backdrop.dispose(), this._focustrap.deactivate(), super.dispose();\n    }\n    handleUpdate() {\n      this._adjustDialog();\n    }\n    _initializeBackDrop() {\n      return new we({\n        isVisible: Boolean(this._config.backdrop),\n        isAnimated: this._isAnimated()\n      });\n    }\n    _initializeFocusTrap() {\n      return new Se({\n        trapElement: this._element\n      });\n    }\n    _showElement(t) {\n      document.body.contains(this._element) || document.body.append(this._element), this._element.style.display = \"block\", this._element.removeAttribute(\"aria-hidden\"), this._element.setAttribute(\"aria-modal\", !0), this._element.setAttribute(\"role\", \"dialog\"), this._element.scrollTop = 0;\n      const e = K.findOne(\".modal-body\", this._dialog);\n      e && (e.scrollTop = 0), g(this._element), this._element.classList.add(Ve), this._queueCallback(() => {\n        this._config.focus && this._focustrap.activate(), this._isTransitioning = !1, j.trigger(this._element, ze, {\n          relatedTarget: t\n        });\n      }, this._dialog, this._isAnimated());\n    }\n    _addEventListeners() {\n      j.on(this._element, We, t => {\n        \"Escape\" === t.key && (this._config.keyboard ? this.hide() : this._triggerBackdropTransition());\n      }), j.on(window, He, () => {\n        this._isShown && !this._isTransitioning && this._adjustDialog();\n      }), j.on(this._element, qe, t => {\n        j.one(this._element, Be, e => {\n          this._element === t.target && this._element === e.target && (\"static\" !== this._config.backdrop ? this._config.backdrop && this.hide() : this._triggerBackdropTransition());\n        });\n      });\n    }\n    _hideModal() {\n      this._element.style.display = \"none\", this._element.setAttribute(\"aria-hidden\", !0), this._element.removeAttribute(\"aria-modal\"), this._element.removeAttribute(\"role\"), this._isTransitioning = !1, this._backdrop.hide(() => {\n        document.body.classList.remove(Ke), this._resetAdjustments(), this._scrollBar.reset(), j.trigger(this._element, je);\n      });\n    }\n    _isAnimated() {\n      return this._element.classList.contains(\"fade\");\n    }\n    _triggerBackdropTransition() {\n      if (j.trigger(this._element, Me).defaultPrevented) return;\n      const t = this._element.scrollHeight > document.documentElement.clientHeight,\n        e = this._element.style.overflowY;\n      \"hidden\" === e || this._element.classList.contains(Qe) || (t || (this._element.style.overflowY = \"hidden\"), this._element.classList.add(Qe), this._queueCallback(() => {\n        this._element.classList.remove(Qe), this._queueCallback(() => {\n          this._element.style.overflowY = e;\n        }, this._dialog);\n      }, this._dialog), this._element.focus());\n    }\n    _adjustDialog() {\n      const t = this._element.scrollHeight > document.documentElement.clientHeight,\n        e = this._scrollBar.getWidth(),\n        i = e > 0;\n      if (i && !t) {\n        const t = p() ? \"paddingLeft\" : \"paddingRight\";\n        this._element.style[t] = `${e}px`;\n      }\n      if (!i && t) {\n        const t = p() ? \"paddingRight\" : \"paddingLeft\";\n        this._element.style[t] = `${e}px`;\n      }\n    }\n    _resetAdjustments() {\n      this._element.style.paddingLeft = \"\", this._element.style.paddingRight = \"\";\n    }\n    static jQueryInterface(t, e) {\n      return this.each(function () {\n        const i = Ue.getOrCreateInstance(this, t);\n        if (\"string\" == typeof t) {\n          if (void 0 === i[t]) throw new TypeError(`No method named \"${t}\"`);\n          i[t](e);\n        }\n      });\n    }\n  }\n  j.on(document, Re, '[data-bs-toggle=\"modal\"]', function (t) {\n    const e = K.getElementFromSelector(this);\n    [\"A\", \"AREA\"].includes(this.tagName) && t.preventDefault(), j.one(e, Fe, t => {\n      t.defaultPrevented || j.one(e, je, () => {\n        h(this) && this.focus();\n      });\n    });\n    const i = K.findOne(\".modal.show\");\n    i && Ue.getInstance(i).hide(), Ue.getOrCreateInstance(e).toggle(this);\n  }), V(Ue), b(Ue);\n  const Ge = \".bs.offcanvas\",\n    Je = \".data-api\",\n    Ze = `load${Ge}${Je}`,\n    ti = \"show\",\n    ei = \"showing\",\n    ii = \"hiding\",\n    si = \".offcanvas.show\",\n    ni = `show${Ge}`,\n    oi = `shown${Ge}`,\n    ri = `hide${Ge}`,\n    ai = `hidePrevented${Ge}`,\n    li = `hidden${Ge}`,\n    ci = `resize${Ge}`,\n    hi = `click${Ge}${Je}`,\n    di = `keydown.dismiss${Ge}`,\n    ui = {\n      backdrop: !0,\n      keyboard: !0,\n      scroll: !1\n    },\n    _i = {\n      backdrop: \"(boolean|string)\",\n      keyboard: \"boolean\",\n      scroll: \"boolean\"\n    };\n  class gi extends W {\n    constructor(t, e) {\n      super(t, e), this._isShown = !1, this._backdrop = this._initializeBackDrop(), this._focustrap = this._initializeFocusTrap(), this._addEventListeners();\n    }\n    static get Default() {\n      return ui;\n    }\n    static get DefaultType() {\n      return _i;\n    }\n    static get NAME() {\n      return \"offcanvas\";\n    }\n    toggle(t) {\n      return this._isShown ? this.hide() : this.show(t);\n    }\n    show(t) {\n      this._isShown || j.trigger(this._element, ni, {\n        relatedTarget: t\n      }).defaultPrevented || (this._isShown = !0, this._backdrop.show(), this._config.scroll || new Ne().hide(), this._element.setAttribute(\"aria-modal\", !0), this._element.setAttribute(\"role\", \"dialog\"), this._element.classList.add(ei), this._queueCallback(() => {\n        this._config.scroll && !this._config.backdrop || this._focustrap.activate(), this._element.classList.add(ti), this._element.classList.remove(ei), j.trigger(this._element, oi, {\n          relatedTarget: t\n        });\n      }, this._element, !0));\n    }\n    hide() {\n      this._isShown && (j.trigger(this._element, ri).defaultPrevented || (this._focustrap.deactivate(), this._element.blur(), this._isShown = !1, this._element.classList.add(ii), this._backdrop.hide(), this._queueCallback(() => {\n        this._element.classList.remove(ti, ii), this._element.removeAttribute(\"aria-modal\"), this._element.removeAttribute(\"role\"), this._config.scroll || new Ne().reset(), j.trigger(this._element, li);\n      }, this._element, !0)));\n    }\n    dispose() {\n      this._backdrop.dispose(), this._focustrap.deactivate(), super.dispose();\n    }\n    _initializeBackDrop() {\n      const t = Boolean(this._config.backdrop);\n      return new we({\n        className: \"offcanvas-backdrop\",\n        isVisible: t,\n        isAnimated: !0,\n        rootElement: this._element.parentNode,\n        clickCallback: t ? () => {\n          \"static\" !== this._config.backdrop ? this.hide() : j.trigger(this._element, ai);\n        } : null\n      });\n    }\n    _initializeFocusTrap() {\n      return new Se({\n        trapElement: this._element\n      });\n    }\n    _addEventListeners() {\n      j.on(this._element, di, t => {\n        \"Escape\" === t.key && (this._config.keyboard ? this.hide() : j.trigger(this._element, ai));\n      });\n    }\n    static jQueryInterface(t) {\n      return this.each(function () {\n        const e = gi.getOrCreateInstance(this, t);\n        if (\"string\" == typeof t) {\n          if (void 0 === e[t] || t.startsWith(\"_\") || \"constructor\" === t) throw new TypeError(`No method named \"${t}\"`);\n          e[t](this);\n        }\n      });\n    }\n  }\n  j.on(document, hi, '[data-bs-toggle=\"offcanvas\"]', function (t) {\n    const e = K.getElementFromSelector(this);\n    if ([\"A\", \"AREA\"].includes(this.tagName) && t.preventDefault(), d(this)) return;\n    j.one(e, li, () => {\n      h(this) && this.focus();\n    });\n    const i = K.findOne(si);\n    i && i !== e && gi.getInstance(i).hide(), gi.getOrCreateInstance(e).toggle(this);\n  }), j.on(window, Ze, () => {\n    for (const t of K.find(si)) gi.getOrCreateInstance(t).show();\n  }), j.on(window, ci, () => {\n    for (const t of K.find(\"[aria-modal][class*=show][class*=offcanvas-]\")) \"fixed\" !== getComputedStyle(t).position && gi.getOrCreateInstance(t).hide();\n  }), V(gi), b(gi);\n  const fi = {\n      \"*\": [\"class\", \"dir\", \"id\", \"lang\", \"role\", /^aria-[\\w-]*$/i],\n      a: [\"target\", \"href\", \"title\", \"rel\"],\n      area: [],\n      b: [],\n      br: [],\n      col: [],\n      code: [],\n      dd: [],\n      div: [],\n      dl: [],\n      dt: [],\n      em: [],\n      hr: [],\n      h1: [],\n      h2: [],\n      h3: [],\n      h4: [],\n      h5: [],\n      h6: [],\n      i: [],\n      img: [\"src\", \"srcset\", \"alt\", \"title\", \"width\", \"height\"],\n      li: [],\n      ol: [],\n      p: [],\n      pre: [],\n      s: [],\n      small: [],\n      span: [],\n      sub: [],\n      sup: [],\n      strong: [],\n      u: [],\n      ul: []\n    },\n    mi = new Set([\"background\", \"cite\", \"href\", \"itemtype\", \"longdesc\", \"poster\", \"src\", \"xlink:href\"]),\n    pi = /^(?!javascript:)(?:[a-z0-9+.-]+:|[^&:/?#]*(?:[/?#]|$))/i,\n    bi = (t, e) => {\n      const i = t.nodeName.toLowerCase();\n      return e.includes(i) ? !mi.has(i) || Boolean(pi.test(t.nodeValue)) : e.filter(t => t instanceof RegExp).some(t => t.test(i));\n    },\n    vi = {\n      allowList: fi,\n      content: {},\n      extraClass: \"\",\n      html: !1,\n      sanitize: !0,\n      sanitizeFn: null,\n      template: \"<div></div>\"\n    },\n    yi = {\n      allowList: \"object\",\n      content: \"object\",\n      extraClass: \"(string|function)\",\n      html: \"boolean\",\n      sanitize: \"boolean\",\n      sanitizeFn: \"(null|function)\",\n      template: \"string\"\n    },\n    wi = {\n      entry: \"(string|element|function|null)\",\n      selector: \"(string|element)\"\n    };\n  class Ai extends q {\n    constructor(t) {\n      super(), this._config = this._getConfig(t);\n    }\n    static get Default() {\n      return vi;\n    }\n    static get DefaultType() {\n      return yi;\n    }\n    static get NAME() {\n      return \"TemplateFactory\";\n    }\n    getContent() {\n      return Object.values(this._config.content).map(t => this._resolvePossibleFunction(t)).filter(Boolean);\n    }\n    hasContent() {\n      return this.getContent().length > 0;\n    }\n    changeContent(t) {\n      return this._checkContent(t), this._config.content = {\n        ...this._config.content,\n        ...t\n      }, this;\n    }\n    toHtml() {\n      const t = document.createElement(\"div\");\n      t.innerHTML = this._maybeSanitize(this._config.template);\n      for (const [e, i] of Object.entries(this._config.content)) this._setContent(t, i, e);\n      const e = t.children[0],\n        i = this._resolvePossibleFunction(this._config.extraClass);\n      return i && e.classList.add(...i.split(\" \")), e;\n    }\n    _typeCheckConfig(t) {\n      super._typeCheckConfig(t), this._checkContent(t.content);\n    }\n    _checkContent(t) {\n      for (const [e, i] of Object.entries(t)) super._typeCheckConfig({\n        selector: e,\n        entry: i\n      }, wi);\n    }\n    _setContent(t, e, i) {\n      const s = K.findOne(i, t);\n      s && ((e = this._resolvePossibleFunction(e)) ? l(e) ? this._putElementInTemplate(c(e), s) : this._config.html ? s.innerHTML = this._maybeSanitize(e) : s.textContent = e : s.remove());\n    }\n    _maybeSanitize(t) {\n      return this._config.sanitize ? function (t, e, i) {\n        if (!t.length) return t;\n        if (i && \"function\" == typeof i) return i(t);\n        const s = new window.DOMParser().parseFromString(t, \"text/html\"),\n          n = [].concat(...s.body.querySelectorAll(\"*\"));\n        for (const t of n) {\n          const i = t.nodeName.toLowerCase();\n          if (!Object.keys(e).includes(i)) {\n            t.remove();\n            continue;\n          }\n          const s = [].concat(...t.attributes),\n            n = [].concat(e[\"*\"] || [], e[i] || []);\n          for (const e of s) bi(e, n) || t.removeAttribute(e.nodeName);\n        }\n        return s.body.innerHTML;\n      }(t, this._config.allowList, this._config.sanitizeFn) : t;\n    }\n    _resolvePossibleFunction(t) {\n      return v(t, [this]);\n    }\n    _putElementInTemplate(t, e) {\n      if (this._config.html) return e.innerHTML = \"\", void e.append(t);\n      e.textContent = t.textContent;\n    }\n  }\n  const Ei = new Set([\"sanitize\", \"allowList\", \"sanitizeFn\"]),\n    Ci = \"fade\",\n    Ti = \"show\",\n    ki = \".modal\",\n    $i = \"hide.bs.modal\",\n    Si = \"hover\",\n    Li = \"focus\",\n    Oi = {\n      AUTO: \"auto\",\n      TOP: \"top\",\n      RIGHT: p() ? \"left\" : \"right\",\n      BOTTOM: \"bottom\",\n      LEFT: p() ? \"right\" : \"left\"\n    },\n    Ii = {\n      allowList: fi,\n      animation: !0,\n      boundary: \"clippingParents\",\n      container: !1,\n      customClass: \"\",\n      delay: 0,\n      fallbackPlacements: [\"top\", \"right\", \"bottom\", \"left\"],\n      html: !1,\n      offset: [0, 6],\n      placement: \"top\",\n      popperConfig: null,\n      sanitize: !0,\n      sanitizeFn: null,\n      selector: !1,\n      template: '<div class=\"tooltip\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>',\n      title: \"\",\n      trigger: \"hover focus\"\n    },\n    Di = {\n      allowList: \"object\",\n      animation: \"boolean\",\n      boundary: \"(string|element)\",\n      container: \"(string|element|boolean)\",\n      customClass: \"(string|function)\",\n      delay: \"(number|object)\",\n      fallbackPlacements: \"array\",\n      html: \"boolean\",\n      offset: \"(array|string|function)\",\n      placement: \"(string|function)\",\n      popperConfig: \"(null|object|function)\",\n      sanitize: \"boolean\",\n      sanitizeFn: \"(null|function)\",\n      selector: \"(string|boolean)\",\n      template: \"string\",\n      title: \"(string|element|function)\",\n      trigger: \"string\"\n    };\n  class Ni extends W {\n    constructor(t, e) {\n      if (void 0 === i) throw new TypeError(\"Bootstrap's tooltips require Popper (https://popper.js.org)\");\n      super(t, e), this._isEnabled = !0, this._timeout = 0, this._isHovered = null, this._activeTrigger = {}, this._popper = null, this._templateFactory = null, this._newContent = null, this.tip = null, this._setListeners(), this._config.selector || this._fixTitle();\n    }\n    static get Default() {\n      return Ii;\n    }\n    static get DefaultType() {\n      return Di;\n    }\n    static get NAME() {\n      return \"tooltip\";\n    }\n    enable() {\n      this._isEnabled = !0;\n    }\n    disable() {\n      this._isEnabled = !1;\n    }\n    toggleEnabled() {\n      this._isEnabled = !this._isEnabled;\n    }\n    toggle() {\n      this._isEnabled && (this._activeTrigger.click = !this._activeTrigger.click, this._isShown() ? this._leave() : this._enter());\n    }\n    dispose() {\n      clearTimeout(this._timeout), j.off(this._element.closest(ki), $i, this._hideModalHandler), this._element.getAttribute(\"data-bs-original-title\") && this._element.setAttribute(\"title\", this._element.getAttribute(\"data-bs-original-title\")), this._disposePopper(), super.dispose();\n    }\n    show() {\n      if (\"none\" === this._element.style.display) throw new Error(\"Please use show on visible elements\");\n      if (!this._isWithContent() || !this._isEnabled) return;\n      const t = j.trigger(this._element, this.constructor.eventName(\"show\")),\n        e = (u(this._element) || this._element.ownerDocument.documentElement).contains(this._element);\n      if (t.defaultPrevented || !e) return;\n      this._disposePopper();\n      const i = this._getTipElement();\n      this._element.setAttribute(\"aria-describedby\", i.getAttribute(\"id\"));\n      const {\n        container: s\n      } = this._config;\n      if (this._element.ownerDocument.documentElement.contains(this.tip) || (s.append(i), j.trigger(this._element, this.constructor.eventName(\"inserted\"))), this._popper = this._createPopper(i), i.classList.add(Ti), \"ontouchstart\" in document.documentElement) for (const t of [].concat(...document.body.children)) j.on(t, \"mouseover\", _);\n      this._queueCallback(() => {\n        j.trigger(this._element, this.constructor.eventName(\"shown\")), !1 === this._isHovered && this._leave(), this._isHovered = !1;\n      }, this.tip, this._isAnimated());\n    }\n    hide() {\n      if (this._isShown() && !j.trigger(this._element, this.constructor.eventName(\"hide\")).defaultPrevented) {\n        if (this._getTipElement().classList.remove(Ti), \"ontouchstart\" in document.documentElement) for (const t of [].concat(...document.body.children)) j.off(t, \"mouseover\", _);\n        this._activeTrigger.click = !1, this._activeTrigger[Li] = !1, this._activeTrigger[Si] = !1, this._isHovered = null, this._queueCallback(() => {\n          this._isWithActiveTrigger() || (this._isHovered || this._disposePopper(), this._element.removeAttribute(\"aria-describedby\"), j.trigger(this._element, this.constructor.eventName(\"hidden\")));\n        }, this.tip, this._isAnimated());\n      }\n    }\n    update() {\n      this._popper && this._popper.update();\n    }\n    _isWithContent() {\n      return Boolean(this._getTitle());\n    }\n    _getTipElement() {\n      return this.tip || (this.tip = this._createTipElement(this._newContent || this._getContentForTemplate())), this.tip;\n    }\n    _createTipElement(t) {\n      const e = this._getTemplateFactory(t).toHtml();\n      if (!e) return null;\n      e.classList.remove(Ci, Ti), e.classList.add(`bs-${this.constructor.NAME}-auto`);\n      const i = (t => {\n        do {\n          t += Math.floor(1e6 * Math.random());\n        } while (document.getElementById(t));\n        return t;\n      })(this.constructor.NAME).toString();\n      return e.setAttribute(\"id\", i), this._isAnimated() && e.classList.add(Ci), e;\n    }\n    setContent(t) {\n      this._newContent = t, this._isShown() && (this._disposePopper(), this.show());\n    }\n    _getTemplateFactory(t) {\n      return this._templateFactory ? this._templateFactory.changeContent(t) : this._templateFactory = new Ai({\n        ...this._config,\n        content: t,\n        extraClass: this._resolvePossibleFunction(this._config.customClass)\n      }), this._templateFactory;\n    }\n    _getContentForTemplate() {\n      return {\n        \".tooltip-inner\": this._getTitle()\n      };\n    }\n    _getTitle() {\n      return this._resolvePossibleFunction(this._config.title) || this._element.getAttribute(\"data-bs-original-title\");\n    }\n    _initializeOnDelegatedTarget(t) {\n      return this.constructor.getOrCreateInstance(t.delegateTarget, this._getDelegateConfig());\n    }\n    _isAnimated() {\n      return this._config.animation || this.tip && this.tip.classList.contains(Ci);\n    }\n    _isShown() {\n      return this.tip && this.tip.classList.contains(Ti);\n    }\n    _createPopper(t) {\n      const e = v(this._config.placement, [this, t, this._element]),\n        s = Oi[e.toUpperCase()];\n      return i.createPopper(this._element, t, this._getPopperConfig(s));\n    }\n    _getOffset() {\n      const {\n        offset: t\n      } = this._config;\n      return \"string\" == typeof t ? t.split(\",\").map(t => Number.parseInt(t, 10)) : \"function\" == typeof t ? e => t(e, this._element) : t;\n    }\n    _resolvePossibleFunction(t) {\n      return v(t, [this._element]);\n    }\n    _getPopperConfig(t) {\n      const e = {\n        placement: t,\n        modifiers: [{\n          name: \"flip\",\n          options: {\n            fallbackPlacements: this._config.fallbackPlacements\n          }\n        }, {\n          name: \"offset\",\n          options: {\n            offset: this._getOffset()\n          }\n        }, {\n          name: \"preventOverflow\",\n          options: {\n            boundary: this._config.boundary\n          }\n        }, {\n          name: \"arrow\",\n          options: {\n            element: `.${this.constructor.NAME}-arrow`\n          }\n        }, {\n          name: \"preSetPlacement\",\n          enabled: !0,\n          phase: \"beforeMain\",\n          fn: t => {\n            this._getTipElement().setAttribute(\"data-popper-placement\", t.state.placement);\n          }\n        }]\n      };\n      return {\n        ...e,\n        ...v(this._config.popperConfig, [e])\n      };\n    }\n    _setListeners() {\n      const t = this._config.trigger.split(\" \");\n      for (const e of t) if (\"click\" === e) j.on(this._element, this.constructor.eventName(\"click\"), this._config.selector, t => {\n        this._initializeOnDelegatedTarget(t).toggle();\n      });else if (\"manual\" !== e) {\n        const t = e === Si ? this.constructor.eventName(\"mouseenter\") : this.constructor.eventName(\"focusin\"),\n          i = e === Si ? this.constructor.eventName(\"mouseleave\") : this.constructor.eventName(\"focusout\");\n        j.on(this._element, t, this._config.selector, t => {\n          const e = this._initializeOnDelegatedTarget(t);\n          e._activeTrigger[\"focusin\" === t.type ? Li : Si] = !0, e._enter();\n        }), j.on(this._element, i, this._config.selector, t => {\n          const e = this._initializeOnDelegatedTarget(t);\n          e._activeTrigger[\"focusout\" === t.type ? Li : Si] = e._element.contains(t.relatedTarget), e._leave();\n        });\n      }\n      this._hideModalHandler = () => {\n        this._element && this.hide();\n      }, j.on(this._element.closest(ki), $i, this._hideModalHandler);\n    }\n    _fixTitle() {\n      const t = this._element.getAttribute(\"title\");\n      t && (this._element.getAttribute(\"aria-label\") || this._element.textContent.trim() || this._element.setAttribute(\"aria-label\", t), this._element.setAttribute(\"data-bs-original-title\", t), this._element.removeAttribute(\"title\"));\n    }\n    _enter() {\n      this._isShown() || this._isHovered ? this._isHovered = !0 : (this._isHovered = !0, this._setTimeout(() => {\n        this._isHovered && this.show();\n      }, this._config.delay.show));\n    }\n    _leave() {\n      this._isWithActiveTrigger() || (this._isHovered = !1, this._setTimeout(() => {\n        this._isHovered || this.hide();\n      }, this._config.delay.hide));\n    }\n    _setTimeout(t, e) {\n      clearTimeout(this._timeout), this._timeout = setTimeout(t, e);\n    }\n    _isWithActiveTrigger() {\n      return Object.values(this._activeTrigger).includes(!0);\n    }\n    _getConfig(t) {\n      const e = B.getDataAttributes(this._element);\n      for (const t of Object.keys(e)) Ei.has(t) && delete e[t];\n      return t = {\n        ...e,\n        ...(\"object\" == typeof t && t ? t : {})\n      }, t = this._mergeConfigObj(t), t = this._configAfterMerge(t), this._typeCheckConfig(t), t;\n    }\n    _configAfterMerge(t) {\n      return t.container = !1 === t.container ? document.body : c(t.container), \"number\" == typeof t.delay && (t.delay = {\n        show: t.delay,\n        hide: t.delay\n      }), \"number\" == typeof t.title && (t.title = t.title.toString()), \"number\" == typeof t.content && (t.content = t.content.toString()), t;\n    }\n    _getDelegateConfig() {\n      const t = {};\n      for (const [e, i] of Object.entries(this._config)) this.constructor.Default[e] !== i && (t[e] = i);\n      return t.selector = !1, t.trigger = \"manual\", t;\n    }\n    _disposePopper() {\n      this._popper && (this._popper.destroy(), this._popper = null), this.tip && (this.tip.remove(), this.tip = null);\n    }\n    static jQueryInterface(t) {\n      return this.each(function () {\n        const e = Ni.getOrCreateInstance(this, t);\n        if (\"string\" == typeof t) {\n          if (void 0 === e[t]) throw new TypeError(`No method named \"${t}\"`);\n          e[t]();\n        }\n      });\n    }\n  }\n  b(Ni);\n  const Pi = {\n      ...Ni.Default,\n      content: \"\",\n      offset: [0, 8],\n      placement: \"right\",\n      template: '<div class=\"popover\" role=\"tooltip\"><div class=\"popover-arrow\"></div><h3 class=\"popover-header\"></h3><div class=\"popover-body\"></div></div>',\n      trigger: \"click\"\n    },\n    xi = {\n      ...Ni.DefaultType,\n      content: \"(null|string|element|function)\"\n    };\n  class Mi extends Ni {\n    static get Default() {\n      return Pi;\n    }\n    static get DefaultType() {\n      return xi;\n    }\n    static get NAME() {\n      return \"popover\";\n    }\n    _isWithContent() {\n      return this._getTitle() || this._getContent();\n    }\n    _getContentForTemplate() {\n      return {\n        \".popover-header\": this._getTitle(),\n        \".popover-body\": this._getContent()\n      };\n    }\n    _getContent() {\n      return this._resolvePossibleFunction(this._config.content);\n    }\n    static jQueryInterface(t) {\n      return this.each(function () {\n        const e = Mi.getOrCreateInstance(this, t);\n        if (\"string\" == typeof t) {\n          if (void 0 === e[t]) throw new TypeError(`No method named \"${t}\"`);\n          e[t]();\n        }\n      });\n    }\n  }\n  b(Mi);\n  const ji = \".bs.scrollspy\",\n    Fi = `activate${ji}`,\n    zi = `click${ji}`,\n    Hi = `load${ji}.data-api`,\n    Bi = \"active\",\n    qi = \"[href]\",\n    Wi = \".nav-link\",\n    Ri = `${Wi}, .nav-item > ${Wi}, .list-group-item`,\n    Ki = {\n      offset: null,\n      rootMargin: \"0px 0px -25%\",\n      smoothScroll: !1,\n      target: null,\n      threshold: [.1, .5, 1]\n    },\n    Vi = {\n      offset: \"(number|null)\",\n      rootMargin: \"string\",\n      smoothScroll: \"boolean\",\n      target: \"element\",\n      threshold: \"array\"\n    };\n  class Qi extends W {\n    constructor(t, e) {\n      super(t, e), this._targetLinks = new Map(), this._observableSections = new Map(), this._rootElement = \"visible\" === getComputedStyle(this._element).overflowY ? null : this._element, this._activeTarget = null, this._observer = null, this._previousScrollData = {\n        visibleEntryTop: 0,\n        parentScrollTop: 0\n      }, this.refresh();\n    }\n    static get Default() {\n      return Ki;\n    }\n    static get DefaultType() {\n      return Vi;\n    }\n    static get NAME() {\n      return \"scrollspy\";\n    }\n    refresh() {\n      this._initializeTargetsAndObservables(), this._maybeEnableSmoothScroll(), this._observer ? this._observer.disconnect() : this._observer = this._getNewObserver();\n      for (const t of this._observableSections.values()) this._observer.observe(t);\n    }\n    dispose() {\n      this._observer.disconnect(), super.dispose();\n    }\n    _configAfterMerge(t) {\n      return t.target = c(t.target) || document.body, t.rootMargin = t.offset ? `${t.offset}px 0px -30%` : t.rootMargin, \"string\" == typeof t.threshold && (t.threshold = t.threshold.split(\",\").map(t => Number.parseFloat(t))), t;\n    }\n    _maybeEnableSmoothScroll() {\n      this._config.smoothScroll && (j.off(this._config.target, zi), j.on(this._config.target, zi, qi, t => {\n        const e = this._observableSections.get(t.target.hash);\n        if (e) {\n          t.preventDefault();\n          const i = this._rootElement || window,\n            s = e.offsetTop - this._element.offsetTop;\n          if (i.scrollTo) return void i.scrollTo({\n            top: s,\n            behavior: \"smooth\"\n          });\n          i.scrollTop = s;\n        }\n      }));\n    }\n    _getNewObserver() {\n      const t = {\n        root: this._rootElement,\n        threshold: this._config.threshold,\n        rootMargin: this._config.rootMargin\n      };\n      return new IntersectionObserver(t => this._observerCallback(t), t);\n    }\n    _observerCallback(t) {\n      const e = t => this._targetLinks.get(`#${t.target.id}`),\n        i = t => {\n          this._previousScrollData.visibleEntryTop = t.target.offsetTop, this._process(e(t));\n        },\n        s = (this._rootElement || document.documentElement).scrollTop,\n        n = s >= this._previousScrollData.parentScrollTop;\n      this._previousScrollData.parentScrollTop = s;\n      for (const o of t) {\n        if (!o.isIntersecting) {\n          this._activeTarget = null, this._clearActiveClass(e(o));\n          continue;\n        }\n        const t = o.target.offsetTop >= this._previousScrollData.visibleEntryTop;\n        if (n && t) {\n          if (i(o), !s) return;\n        } else n || t || i(o);\n      }\n    }\n    _initializeTargetsAndObservables() {\n      this._targetLinks = new Map(), this._observableSections = new Map();\n      const t = K.find(qi, this._config.target);\n      for (const e of t) {\n        if (!e.hash || d(e)) continue;\n        const t = K.findOne(decodeURI(e.hash), this._element);\n        h(t) && (this._targetLinks.set(decodeURI(e.hash), e), this._observableSections.set(e.hash, t));\n      }\n    }\n    _process(t) {\n      this._activeTarget !== t && (this._clearActiveClass(this._config.target), this._activeTarget = t, t.classList.add(Bi), this._activateParents(t), j.trigger(this._element, Fi, {\n        relatedTarget: t\n      }));\n    }\n    _activateParents(t) {\n      if (t.classList.contains(\"dropdown-item\")) K.findOne(\".dropdown-toggle\", t.closest(\".dropdown\")).classList.add(Bi);else for (const e of K.parents(t, \".nav, .list-group\")) for (const t of K.prev(e, Ri)) t.classList.add(Bi);\n    }\n    _clearActiveClass(t) {\n      t.classList.remove(Bi);\n      const e = K.find(`${qi}.${Bi}`, t);\n      for (const t of e) t.classList.remove(Bi);\n    }\n    static jQueryInterface(t) {\n      return this.each(function () {\n        const e = Qi.getOrCreateInstance(this, t);\n        if (\"string\" == typeof t) {\n          if (void 0 === e[t] || t.startsWith(\"_\") || \"constructor\" === t) throw new TypeError(`No method named \"${t}\"`);\n          e[t]();\n        }\n      });\n    }\n  }\n  j.on(window, Hi, () => {\n    for (const t of K.find('[data-bs-spy=\"scroll\"]')) Qi.getOrCreateInstance(t);\n  }), b(Qi);\n  const Xi = \".bs.tab\",\n    Yi = `hide${Xi}`,\n    Ui = `hidden${Xi}`,\n    Gi = `show${Xi}`,\n    Ji = `shown${Xi}`,\n    Zi = `click${Xi}`,\n    ts = `keydown${Xi}`,\n    es = `load${Xi}`,\n    is = \"ArrowLeft\",\n    ss = \"ArrowRight\",\n    ns = \"ArrowUp\",\n    os = \"ArrowDown\",\n    rs = \"Home\",\n    as = \"End\",\n    ls = \"active\",\n    cs = \"fade\",\n    hs = \"show\",\n    ds = \".dropdown-toggle\",\n    us = `:not(${ds})`,\n    _s = '[data-bs-toggle=\"tab\"], [data-bs-toggle=\"pill\"], [data-bs-toggle=\"list\"]',\n    gs = `.nav-link${us}, .list-group-item${us}, [role=\"tab\"]${us}, ${_s}`,\n    fs = `.${ls}[data-bs-toggle=\"tab\"], .${ls}[data-bs-toggle=\"pill\"], .${ls}[data-bs-toggle=\"list\"]`;\n  class ms extends W {\n    constructor(t) {\n      super(t), this._parent = this._element.closest('.list-group, .nav, [role=\"tablist\"]'), this._parent && (this._setInitialAttributes(this._parent, this._getChildren()), j.on(this._element, ts, t => this._keydown(t)));\n    }\n    static get NAME() {\n      return \"tab\";\n    }\n    show() {\n      const t = this._element;\n      if (this._elemIsActive(t)) return;\n      const e = this._getActiveElem(),\n        i = e ? j.trigger(e, Yi, {\n          relatedTarget: t\n        }) : null;\n      j.trigger(t, Gi, {\n        relatedTarget: e\n      }).defaultPrevented || i && i.defaultPrevented || (this._deactivate(e, t), this._activate(t, e));\n    }\n    _activate(t, e) {\n      t && (t.classList.add(ls), this._activate(K.getElementFromSelector(t)), this._queueCallback(() => {\n        \"tab\" === t.getAttribute(\"role\") ? (t.removeAttribute(\"tabindex\"), t.setAttribute(\"aria-selected\", !0), this._toggleDropDown(t, !0), j.trigger(t, Ji, {\n          relatedTarget: e\n        })) : t.classList.add(hs);\n      }, t, t.classList.contains(cs)));\n    }\n    _deactivate(t, e) {\n      t && (t.classList.remove(ls), t.blur(), this._deactivate(K.getElementFromSelector(t)), this._queueCallback(() => {\n        \"tab\" === t.getAttribute(\"role\") ? (t.setAttribute(\"aria-selected\", !1), t.setAttribute(\"tabindex\", \"-1\"), this._toggleDropDown(t, !1), j.trigger(t, Ui, {\n          relatedTarget: e\n        })) : t.classList.remove(hs);\n      }, t, t.classList.contains(cs)));\n    }\n    _keydown(t) {\n      if (![is, ss, ns, os, rs, as].includes(t.key)) return;\n      t.stopPropagation(), t.preventDefault();\n      const e = this._getChildren().filter(t => !d(t));\n      let i;\n      if ([rs, as].includes(t.key)) i = e[t.key === rs ? 0 : e.length - 1];else {\n        const s = [ss, os].includes(t.key);\n        i = w(e, t.target, s, !0);\n      }\n      i && (i.focus({\n        preventScroll: !0\n      }), ms.getOrCreateInstance(i).show());\n    }\n    _getChildren() {\n      return K.find(gs, this._parent);\n    }\n    _getActiveElem() {\n      return this._getChildren().find(t => this._elemIsActive(t)) || null;\n    }\n    _setInitialAttributes(t, e) {\n      this._setAttributeIfNotExists(t, \"role\", \"tablist\");\n      for (const t of e) this._setInitialAttributesOnChild(t);\n    }\n    _setInitialAttributesOnChild(t) {\n      t = this._getInnerElement(t);\n      const e = this._elemIsActive(t),\n        i = this._getOuterElement(t);\n      t.setAttribute(\"aria-selected\", e), i !== t && this._setAttributeIfNotExists(i, \"role\", \"presentation\"), e || t.setAttribute(\"tabindex\", \"-1\"), this._setAttributeIfNotExists(t, \"role\", \"tab\"), this._setInitialAttributesOnTargetPanel(t);\n    }\n    _setInitialAttributesOnTargetPanel(t) {\n      const e = K.getElementFromSelector(t);\n      e && (this._setAttributeIfNotExists(e, \"role\", \"tabpanel\"), t.id && this._setAttributeIfNotExists(e, \"aria-labelledby\", `${t.id}`));\n    }\n    _toggleDropDown(t, e) {\n      const i = this._getOuterElement(t);\n      if (!i.classList.contains(\"dropdown\")) return;\n      const s = (t, s) => {\n        const n = K.findOne(t, i);\n        n && n.classList.toggle(s, e);\n      };\n      s(ds, ls), s(\".dropdown-menu\", hs), i.setAttribute(\"aria-expanded\", e);\n    }\n    _setAttributeIfNotExists(t, e, i) {\n      t.hasAttribute(e) || t.setAttribute(e, i);\n    }\n    _elemIsActive(t) {\n      return t.classList.contains(ls);\n    }\n    _getInnerElement(t) {\n      return t.matches(gs) ? t : K.findOne(gs, t);\n    }\n    _getOuterElement(t) {\n      return t.closest(\".nav-item, .list-group-item\") || t;\n    }\n    static jQueryInterface(t) {\n      return this.each(function () {\n        const e = ms.getOrCreateInstance(this);\n        if (\"string\" == typeof t) {\n          if (void 0 === e[t] || t.startsWith(\"_\") || \"constructor\" === t) throw new TypeError(`No method named \"${t}\"`);\n          e[t]();\n        }\n      });\n    }\n  }\n  j.on(document, Zi, _s, function (t) {\n    [\"A\", \"AREA\"].includes(this.tagName) && t.preventDefault(), d(this) || ms.getOrCreateInstance(this).show();\n  }), j.on(window, es, () => {\n    for (const t of K.find(fs)) ms.getOrCreateInstance(t);\n  }), b(ms);\n  const ps = \".bs.toast\",\n    bs = `mouseover${ps}`,\n    vs = `mouseout${ps}`,\n    ys = `focusin${ps}`,\n    ws = `focusout${ps}`,\n    As = `hide${ps}`,\n    Es = `hidden${ps}`,\n    Cs = `show${ps}`,\n    Ts = `shown${ps}`,\n    ks = \"hide\",\n    $s = \"show\",\n    Ss = \"showing\",\n    Ls = {\n      animation: \"boolean\",\n      autohide: \"boolean\",\n      delay: \"number\"\n    },\n    Os = {\n      animation: !0,\n      autohide: !0,\n      delay: 5e3\n    };\n  class Is extends W {\n    constructor(t, e) {\n      super(t, e), this._timeout = null, this._hasMouseInteraction = !1, this._hasKeyboardInteraction = !1, this._setListeners();\n    }\n    static get Default() {\n      return Os;\n    }\n    static get DefaultType() {\n      return Ls;\n    }\n    static get NAME() {\n      return \"toast\";\n    }\n    show() {\n      j.trigger(this._element, Cs).defaultPrevented || (this._clearTimeout(), this._config.animation && this._element.classList.add(\"fade\"), this._element.classList.remove(ks), g(this._element), this._element.classList.add($s, Ss), this._queueCallback(() => {\n        this._element.classList.remove(Ss), j.trigger(this._element, Ts), this._maybeScheduleHide();\n      }, this._element, this._config.animation));\n    }\n    hide() {\n      this.isShown() && (j.trigger(this._element, As).defaultPrevented || (this._element.classList.add(Ss), this._queueCallback(() => {\n        this._element.classList.add(ks), this._element.classList.remove(Ss, $s), j.trigger(this._element, Es);\n      }, this._element, this._config.animation)));\n    }\n    dispose() {\n      this._clearTimeout(), this.isShown() && this._element.classList.remove($s), super.dispose();\n    }\n    isShown() {\n      return this._element.classList.contains($s);\n    }\n    _maybeScheduleHide() {\n      this._config.autohide && (this._hasMouseInteraction || this._hasKeyboardInteraction || (this._timeout = setTimeout(() => {\n        this.hide();\n      }, this._config.delay)));\n    }\n    _onInteraction(t, e) {\n      switch (t.type) {\n        case \"mouseover\":\n        case \"mouseout\":\n          this._hasMouseInteraction = e;\n          break;\n        case \"focusin\":\n        case \"focusout\":\n          this._hasKeyboardInteraction = e;\n      }\n      if (e) return void this._clearTimeout();\n      const i = t.relatedTarget;\n      this._element === i || this._element.contains(i) || this._maybeScheduleHide();\n    }\n    _setListeners() {\n      j.on(this._element, bs, t => this._onInteraction(t, !0)), j.on(this._element, vs, t => this._onInteraction(t, !1)), j.on(this._element, ys, t => this._onInteraction(t, !0)), j.on(this._element, ws, t => this._onInteraction(t, !1));\n    }\n    _clearTimeout() {\n      clearTimeout(this._timeout), this._timeout = null;\n    }\n    static jQueryInterface(t) {\n      return this.each(function () {\n        const e = Is.getOrCreateInstance(this, t);\n        if (\"string\" == typeof t) {\n          if (void 0 === e[t]) throw new TypeError(`No method named \"${t}\"`);\n          e[t](this);\n        }\n      });\n    }\n  }\n  return V(Is), b(Is), {\n    Alert: U,\n    Button: J,\n    Carousel: Ot,\n    Collapse: Rt,\n    Dropdown: fe,\n    Modal: Ue,\n    Offcanvas: gi,\n    Popover: Mi,\n    ScrollSpy: Qi,\n    Tab: ms,\n    Toast: Is,\n    Tooltip: Ni\n  };\n});","map":null,"metadata":{},"sourceType":"script"}