{"ast":null,"code":"var _jsxFileName = \"D:\\\\VSCode\\\\learn react\\\\learn\\\\src\\\\Login.js\";\nimport React, { useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport axios from 'axios';\nfunction Login() {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleLogin = async event => {\n    event.preventDefault();\n    const requestBody = {\n      username: username,\n      password: password\n    };\n    try {\n      const response = await axios.post('http://localhost:8080/mycoffee/auth/token', requestBody);\n      if (response.data && response.data.result && response.data.result.token) {\n        const token = response.data.result.token;\n\n        // Lưu token vào localStorage\n        localStorage.setItem('authToken', token);\n\n        // Reset form hoặc điều hướng người dùng\n        console.log('Login successful, token:', token);\n      } else {\n        setErrorMessage('Invalid response from server.');\n      }\n    } catch (error) {\n      console.error('Error during login:', error);\n      setErrorMessage('Failed to log in. Please try again.');\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Helmet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"link\", {\n    rel: \"stylesheet\",\n    href: \"assets/bootstrap/css/bootstrap.min.css?h=ae25e30cd2ef0f4f5b70ebf4c668048b\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Login, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }));\n}\nexport default Login;","map":{"version":3,"names":["React","useState","Helmet","axios","Login","username","setUsername","password","setPassword","errorMessage","setErrorMessage","handleLogin","event","preventDefault","requestBody","response","post","data","result","token","localStorage","setItem","console","log","error","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","rel","href"],"sources":["D:/VSCode/learn react/learn/src/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport axios from 'axios';\r\n\r\nfunction Login() {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const requestBody = {\r\n      username: username,\r\n      password: password,\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:8080/mycoffee/auth/token', requestBody);\r\n\r\n      if (response.data && response.data.result && response.data.result.token) {\r\n        const token = response.data.result.token;\r\n\r\n        // Lưu token vào localStorage\r\n        localStorage.setItem('authToken', token);\r\n\r\n        // Reset form hoặc điều hướng người dùng\r\n        console.log('Login successful, token:', token);\r\n      } else {\r\n        setErrorMessage('Invalid response from server.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during login:', error);\r\n      setErrorMessage('Failed to log in. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <link\r\n          rel=\"stylesheet\"\r\n          href=\"assets/bootstrap/css/bootstrap.min.css?h=ae25e30cd2ef0f4f5b70ebf4c668048b\"\r\n        />\r\n      </Helmet>\r\n      <Login />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,cAAc;AACrC,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,KAAKA,CAAA,EAAG;EACf,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMU,WAAW,GAAG,MAAOC,KAAK,IAAK;IACnCA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtB,MAAMC,WAAW,GAAG;MAClBT,QAAQ,EAAEA,QAAQ;MAClBE,QAAQ,EAAEA;IACZ,CAAC;IAED,IAAI;MACF,MAAMQ,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAC,2CAA2C,EAAEF,WAAW,CAAC;MAE3F,IAAIC,QAAQ,CAACE,IAAI,IAAIF,QAAQ,CAACE,IAAI,CAACC,MAAM,IAAIH,QAAQ,CAACE,IAAI,CAACC,MAAM,CAACC,KAAK,EAAE;QACvE,MAAMA,KAAK,GAAGJ,QAAQ,CAACE,IAAI,CAACC,MAAM,CAACC,KAAK;;QAExC;QACAC,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEF,KAAK,CAAC;;QAExC;QACAG,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEJ,KAAK,CAAC;MAChD,CAAC,MAAM;QACLT,eAAe,CAAC,+BAA+B,CAAC;MAClD;IACF,CAAC,CAAC,OAAOc,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3Cd,eAAe,CAAC,qCAAqC,CAAC;IACxD;EACF,CAAC;EAED,oBACEV,KAAA,CAAAyB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACE/B,KAAA,CAAAyB,aAAA,CAACvB,MAAM;IAAAwB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACL/B,KAAA,CAAAyB,aAAA;IACEO,GAAG,EAAC,YAAY;IAChBC,IAAI,EAAC,2EAA2E;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACjF,CACK,CAAC,eACT/B,KAAA,CAAAyB,aAAA,CAACrB,KAAK;IAAAsB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACL,CAAC;AAEV;AAEA,eAAe3B,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module"}