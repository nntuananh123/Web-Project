{"ast":null,"code":"var _jsxFileName = \"D:\\\\VSCode\\\\learn react\\\\learn\\\\src\\\\components\\\\ListMenu.jsx\";\nimport React from 'react';\nimport { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport Order from \"../ModelFE/Order\";\nconst ListMenu = () => {\n  const [products, setProducts] = useState([]);\n  const fetchProducts = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8080/mycoffee/product\");\n      const data = await response.json();\n\n      // Kiểm tra xem có trường result không\n      const productsData = data.result || []; // Lấy mảng sản phẩm từ trường 'result'\n\n      // Ánh xạ sản phẩm\n      const mappedProducts = productsData.map(item => ({\n        id: item.id,\n        name: item.name,\n        price: item.price,\n        category: item.category.name,\n        image_url: item.image_url,\n        createdAt: new Date(item.createdAt),\n        updatedAt: new Date(item.updatedAt),\n        deletedAt: item.deletedAt ? new Date(item.deletedAt) : null\n      }));\n      setProducts(mappedProducts);\n    } catch (error) {\n      console.error(\"Failed to fetch products:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchProducts();\n  }, []);\n  const [order, setOrder] = useState(null); // Lưu phản hồi từ API\n  const [table, setTable] = useState(0); // Lưu số bàn từ URL\n\n  const location = useLocation();\n\n  // Lấy số bàn từ URL\n  const getTableFromUrl = () => {\n    const params = new URLSearchParams(location.search);\n    return parseInt(params.get(\"table\")) || 0; // Trả về số bàn hoặc 0 nếu không có\n  };\n\n  // Gửi yêu cầu POST đến API\n  const handlePostOrder = async () => {\n    const apiUrl = \"http://localhost:8080/mycoffee/order\"; // Thay bằng URL thực tế của bạn\n    const payload = {\n      table: table // Số bàn\n    };\n    try {\n      const response = await fetch(apiUrl, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(payload)\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to post order\");\n      }\n      const data = await response.json();\n\n      // Map dữ liệu nhận được vào model Order\n      const mappedOrder = new Order(data.result);\n      mappedOrder.code = data.code;\n      mappedOrder.message = data.message;\n      setOrder(mappedOrder); // Lưu phản hồi vào state\n    } catch (error) {\n      console.error(\"Error posting order:\", error);\n    }\n  };\n\n  // Lấy số bàn từ URL và tự động gọi API khi component được mount\n  useEffect(() => {\n    const tableFromUrl = getTableFromUrl();\n    setTable(tableFromUrl);\n\n    // Tự động gửi POST request nếu có số bàn\n    if (tableFromUrl > 0) {\n      handlePostOrder();\n    }\n  }, [location.search]); // Chỉ chạy khi query parameter thay đổi\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, \"Create Order\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, \"Table: \", table), order && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, \"Order Details\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, \"Order ID: \", order.orderId), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, \"User ID: \", order.userId), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, \"Table: \", order.table), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, \"Total Price: $\", order.totalPrice), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, \"Message: \", order.message), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, \"Code: \", order.code)))\n  // <div class=\"container py-5\">\n  //     <div class=\"row mx-auto\">\n  //         <div class=\"col\">\n  //             <div data-reflow-type=\"product-list\" data-reflow-layout=\"cards\" data-reflow-order=\"date_desc\" data-reflow-product-link=\"/product.html?product={id}\">\n\n  //                 <div class=\"reflow-product-list ref-cards\">\n\n  //                 <div class=\"ref-products\">\n  //                 {products.map((product) => (\n  //                     <a class=\"ref-product\">\n\n  //                             <div class=\"ref-media\"><img class=\"ref-image\" src={product.image_url} loading=\"lazy\" />\n  //                             </div>\n  //                             <div class=\"ref-product-data\">\n  //                                 <div class=\"ref-product-info\">\n  //                                     <h5 class=\"ref-name\">{product.name}</h5>\n  //                                     </div><strong class=\"ref-price\">${product.price}</strong>\n  //                             </div>\n  //                             <div class=\"ref-addons\"><a class=\"ref-button preview-toggle\" href=\"#\">Add to Cart</a></div>\n  //                         </a>))}\n  //                     </div>\n\n  //                     <div class=\"ref-product-preview\">\n  //                         <div class=\"ref-product-preview-header\">\n  //                             <div class=\"ref-title\"></div>\n  //                             <div class=\"ref-close-button\">×</div>\n  //                         </div>\n  //                         <div class=\"ref-product-preview-content\"></div>\n  //                     </div>\n  //                 </div>\n  //             </div>\n  //         </div>\n  //     </div>\n  // </div>\n  ;\n};\nexport default ListMenu;","map":{"version":3,"names":["React","useEffect","useState","useLocation","Order","ListMenu","products","setProducts","fetchProducts","response","fetch","data","json","productsData","result","mappedProducts","map","item","id","name","price","category","image_url","createdAt","Date","updatedAt","deletedAt","error","console","order","setOrder","table","setTable","location","getTableFromUrl","params","URLSearchParams","search","parseInt","get","handlePostOrder","apiUrl","payload","method","headers","body","JSON","stringify","ok","Error","mappedOrder","code","message","tableFromUrl","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","marginTop","orderId","userId","totalPrice"],"sources":["D:/VSCode/learn react/learn/src/components/ListMenu.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Order from \"../ModelFE/Order\";\r\nconst ListMenu = () => {\r\n  const [products, setProducts] = useState([]);\r\n\r\n  const fetchProducts = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:8080/mycoffee/product\");\r\n        const data = await response.json();\r\n      \r\n        // Kiểm tra xem có trường result không\r\n        const productsData = data.result || []; // Lấy mảng sản phẩm từ trường 'result'\r\n    \r\n        // Ánh xạ sản phẩm\r\n        const mappedProducts = productsData.map((item) => ({\r\n          id: item.id,\r\n          name: item.name,\r\n          price: item.price,\r\n          category: item.category.name,\r\n          image_url: item.image_url,\r\n          createdAt: new Date(item.createdAt),\r\n          updatedAt: new Date(item.updatedAt),\r\n          deletedAt: item.deletedAt ? new Date(item.deletedAt) : null,\r\n        }));\r\n    \r\n        setProducts(mappedProducts);\r\n      } catch (error) {\r\n        console.error(\"Failed to fetch products:\", error);\r\n      }\r\n    };\r\n\r\n  useEffect(() => {\r\n    fetchProducts();\r\n  }, []);\r\n\r\n\r\n  const [order, setOrder] = useState(null); // Lưu phản hồi từ API\r\n  const [table, setTable] = useState(0); // Lưu số bàn từ URL\r\n\r\n  const location = useLocation();\r\n\r\n  // Lấy số bàn từ URL\r\n  const getTableFromUrl = () => {\r\n    const params = new URLSearchParams(location.search);\r\n    return parseInt(params.get(\"table\")) || 0; // Trả về số bàn hoặc 0 nếu không có\r\n  };\r\n\r\n  \r\n  // Gửi yêu cầu POST đến API\r\n  const handlePostOrder = async () => {\r\n    const apiUrl = \"http://localhost:8080/mycoffee/order\"; // Thay bằng URL thực tế của bạn\r\n    const payload = {\r\n      table: table, // Số bàn\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(apiUrl, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(payload),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to post order\");\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      // Map dữ liệu nhận được vào model Order\r\n      const mappedOrder = new Order(data.result);\r\n      mappedOrder.code = data.code;\r\n      mappedOrder.message = data.message;\r\n\r\n      setOrder(mappedOrder); // Lưu phản hồi vào state\r\n    } catch (error) {\r\n      console.error(\"Error posting order:\", error);\r\n    }\r\n  };\r\n\r\n  // Lấy số bàn từ URL và tự động gọi API khi component được mount\r\n  useEffect(() => {\r\n    const tableFromUrl = getTableFromUrl();\r\n    setTable(tableFromUrl);\r\n\r\n    // Tự động gửi POST request nếu có số bàn\r\n    if (tableFromUrl > 0) {\r\n      handlePostOrder();\r\n    }\r\n  }, [location.search]); // Chỉ chạy khi query parameter thay đổi\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h1>Create Order</h1>\r\n      <p>Table: {table}</p>\r\n      {order && (\r\n        <div style={{ marginTop: \"20px\" }}>\r\n          <h2>Order Details</h2>\r\n          <p>Order ID: {order.orderId}</p>\r\n          <p>User ID: {order.userId}</p>\r\n          <p>Table: {order.table}</p>\r\n          <p>Total Price: ${order.totalPrice}</p>\r\n          <p>Message: {order.message}</p>\r\n          <p>Code: {order.code}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n        // <div class=\"container py-5\">\r\n        //     <div class=\"row mx-auto\">\r\n        //         <div class=\"col\">\r\n        //             <div data-reflow-type=\"product-list\" data-reflow-layout=\"cards\" data-reflow-order=\"date_desc\" data-reflow-product-link=\"/product.html?product={id}\">\r\n\r\n        //                 <div class=\"reflow-product-list ref-cards\">\r\n                        \r\n\r\n        //                 <div class=\"ref-products\">\r\n        //                 {products.map((product) => (\r\n        //                     <a class=\"ref-product\">\r\n                            \r\n        //                             <div class=\"ref-media\"><img class=\"ref-image\" src={product.image_url} loading=\"lazy\" />\r\n        //                             </div>\r\n        //                             <div class=\"ref-product-data\">\r\n        //                                 <div class=\"ref-product-info\">\r\n        //                                     <h5 class=\"ref-name\">{product.name}</h5>\r\n        //                                     </div><strong class=\"ref-price\">${product.price}</strong>\r\n        //                             </div>\r\n        //                             <div class=\"ref-addons\"><a class=\"ref-button preview-toggle\" href=\"#\">Add to Cart</a></div>\r\n        //                         </a>))}\r\n        //                     </div>\r\n\r\n\r\n                                \r\n        //                     <div class=\"ref-product-preview\">\r\n        //                         <div class=\"ref-product-preview-header\">\r\n        //                             <div class=\"ref-title\"></div>\r\n        //                             <div class=\"ref-close-button\">×</div>\r\n        //                         </div>\r\n        //                         <div class=\"ref-product-preview-content\"></div>\r\n        //                     </div>\r\n        //                 </div>\r\n        //             </div>\r\n        //         </div>\r\n        //     </div>\r\n        // </div>\r\n  );\r\n};\r\n\r\nexport default ListMenu;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}